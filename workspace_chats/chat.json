{
  "requesterUsername": "stephendor",
  "requesterAvatarIconUri": {
    "$mid": 1,
    "path": "/u/110813118",
    "scheme": "https",
    "authority": "avatars.githubusercontent.com",
    "query": "v=4"
  },
  "responderUsername": "GitHub Copilot",
  "responderAvatarIconUri": {
    "id": "copilot"
  },
  "initialLocation": "panel",
  "requests": [
    {
      "requestId": "request_57c32d93-8505-4a39-999d-edb5caae088a",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 704
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 705
            },
            "text": "Okay, unfortunately our most recent run was interrupted by another extension reloading VS Code. However there are some result files available for analysis. We will need to rerun the vector_stack process using the experiment orchestrator again. Note that Liblinear and SVM both failed to converge again and they took an immense amount of time to do so. Liblinear I think was over an hour and SVM had not fully converged when it was closed after two hours. So we need to investigate these things a bit more. i.e improve performance in terms of convergence and speed. This may be a deeper issue with sparseness of the homology data. Let's get ourselves back up to speed with what happened in this run first.",
            "kind": "text"
          }
        ],
        "text": "Okay, unfortunately our most recent run was interrupted by another extension reloading VS Code. However there are some result files available for analysis. We will need to rerun the vector_stack process using the experiment orchestrator again. Note that Liblinear and SVM both failed to converge again and they took an immense amount of time to do so. Liblinear I think was over an hour and SVM had not fully converged when it was closed after two hours. So we need to investigate these things a bit more. i.e improve performance in terms of convergence and speed. This may be a deeper issue with sparseness of the homology data. Let's get ourselves back up to speed with what happened in this run first."
      },
      "variableData": {
        "variables": [
          {
            "kind": "file",
            "id": "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics.json",
            "value": {
              "$mid": 1,
              "fsPath": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics.json",
              "external": "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics.json",
              "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics.json",
              "scheme": "file"
            },
            "name": "metrics.json",
            "omittedState": 0
          },
          {
            "kind": "file",
            "id": "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics_with_flags.json",
            "value": {
              "$mid": 1,
              "fsPath": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics_with_flags.json",
              "external": "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics_with_flags.json",
              "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics_with_flags.json",
              "scheme": "file"
            },
            "name": "metrics_with_flags.json",
            "omittedState": 0
          },
          {
            "id": "vscode.prompt.instructions.root__file:///home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "name": "prompt:copilot-instructions.md",
            "value": {
              "$mid": 1,
              "external": "file:///home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
              "path": "/home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
              "scheme": "file"
            },
            "kind": "promptFile",
            "modelDescription": "Prompt instructions file",
            "isRoot": true,
            "originLabel": "Automatically attached as setting github.copilot.chat.codeGeneration.useInstructionFiles is enabled",
            "automaticallyAdded": true
          }
        ]
      },
      "response": [
        {
          "kind": "progressTaskSerialized",
          "content": {
            "value": "Optimizing tool selection...",
            "uris": {}
          },
          "progress": []
        },
        {
          "value": "Gathering code context for vector stack orchestration, solver settings, and last run log to accurately summarize the interrupted run and diagnose convergence issues. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_findTextInFiles"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Searching text for `vector_stack`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Searched text for `vector_stack`, 20 results",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true,
          "resultDetails": [
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 487,
                "startColumn": 11,
                "endLineNumber": 487,
                "endColumn": 23
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 500,
                "startColumn": 12,
                "endLineNumber": 500,
                "endColumn": 24
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 4,
                "startColumn": 25,
                "endLineNumber": 4,
                "endColumn": 37
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 100,
                "startColumn": 181,
                "endLineNumber": 100,
                "endColumn": 193
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 42,
                "startColumn": 63,
                "endLineNumber": 42,
                "endColumn": 75
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 60,
                "startColumn": 55,
                "endLineNumber": 60,
                "endColumn": 67
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 91,
                "startColumn": 13,
                "endLineNumber": 91,
                "endColumn": 25
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 93,
                "startColumn": 17,
                "endLineNumber": 93,
                "endColumn": 29
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 783,
                "startColumn": 42,
                "endLineNumber": 783,
                "endColumn": 54
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 784,
                "startColumn": 13,
                "endLineNumber": 784,
                "endColumn": 25
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 842,
                "startColumn": 16,
                "endLineNumber": 842,
                "endColumn": 28
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 844,
                "startColumn": 49,
                "endLineNumber": 844,
                "endColumn": 61
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1100,
                "startColumn": 16,
                "endLineNumber": 1100,
                "endColumn": 28
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1118,
                "startColumn": 33,
                "endLineNumber": 1118,
                "endColumn": 45
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1122,
                "startColumn": 54,
                "endLineNumber": 1122,
                "endColumn": 66
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1163,
                "startColumn": 23,
                "endLineNumber": 1163,
                "endColumn": 35
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1166,
                "startColumn": 31,
                "endLineNumber": 1166,
                "endColumn": 43
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1169,
                "startColumn": 23,
                "endLineNumber": 1169,
                "endColumn": 35
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1169,
                "startColumn": 36,
                "endLineNumber": 1169,
                "endColumn": 48
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1172,
                "startColumn": 27,
                "endLineNumber": 1172,
                "endColumn": 39
              }
            }
          ],
          "toolCallId": "56bdde8c-db22-46af-b2f8-6fdf556f0f70",
          "toolId": "copilot_findTextInFiles"
        },
        {
          "value": "Reading vector_stack module and extraction script to understand feature sparsity and solver configuration. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#1-1), lines 1 to 350",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#1-1": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "scheme": "file",
                "fragment": "1-1"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#1-1), lines 1 to 350",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#1-1": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "scheme": "file",
                "fragment": "1-1"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "ac42eff2-f791-4586-abcb-2e46fc56b4ad",
          "toolId": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#351-351), lines 351 to 502",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#351-351": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "scheme": "file",
                "fragment": "351-351"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#351-351), lines 351 to 502",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py#351-351": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                "scheme": "file",
                "fragment": "351-351"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "dcb54514-1259-4a59-a473-909a83192c89",
          "toolId": "copilot_readFile"
        },
        {
          "value": "Searching for experiment orchestrator and solver configuration related to logistic regression, linear SVM, liblinear. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_findTextInFiles"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Searching text for `orchestrator`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Searched text for `orchestrator`, 7 results",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true,
          "resultDetails": [
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 5,
                "startColumn": 16,
                "endLineNumber": 5,
                "endColumn": 28
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 261,
                "startColumn": 18,
                "endLineNumber": 261,
                "endColumn": 30
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 280,
                "startColumn": 32,
                "endLineNumber": 280,
                "endColumn": 44
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 281,
                "startColumn": 32,
                "endLineNumber": 281,
                "endColumn": 44
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 291,
                "startColumn": 17,
                "endLineNumber": 291,
                "endColumn": 29
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 304,
                "startColumn": 17,
                "endLineNumber": 304,
                "endColumn": 29
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 382,
                "startColumn": 38,
                "endLineNumber": 382,
                "endColumn": 50
              }
            }
          ],
          "toolCallId": "bbb34d56-d935-4ffe-af9a-355c66aac039",
          "toolId": "copilot_findTextInFiles"
        },
        {
          "value": "Reading orchestrator script to understand pipeline and classifier settings. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#1-1), lines 1 to 250",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#1-1": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file",
                "fragment": "1-1"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#1-1), lines 1 to 250",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#1-1": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file",
                "fragment": "1-1"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "2b0e76ce-e643-4ff5-9358-d0f769da6028",
          "toolId": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#251-251), lines 251 to 404",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#251-251": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file",
                "fragment": "251-251"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#251-251), lines 251 to 404",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py#251-251": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                "scheme": "file",
                "fragment": "251-251"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "a922b974-a9e2-4704-9db2-a7dc54eeadcc",
          "toolId": "copilot_readFile"
        },
        {
          "value": "Searching extract_vector_stack script for classifier implementations and solver settings. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_findTextInFiles"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Searching text for `extract_vector_stack.py`",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "pastTenseMessage": {
            "value": "Searched text for `extract_vector_stack.py`, 20 results",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {}
          },
          "isConfirmed": true,
          "isComplete": true,
          "resultDetails": [
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 60,
                "startColumn": 47,
                "endLineNumber": 60,
                "endColumn": 70
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 844,
                "startColumn": 41,
                "endLineNumber": 844,
                "endColumn": 64
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1122,
                "startColumn": 46,
                "endLineNumber": 1122,
                "endColumn": 69
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1166,
                "startColumn": 23,
                "endLineNumber": 1166,
                "endColumn": 46
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1172,
                "startColumn": 19,
                "endLineNumber": 1172,
                "endColumn": 42
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1206,
                "startColumn": 6,
                "endLineNumber": 1206,
                "endColumn": 29
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1312,
                "startColumn": 22,
                "endLineNumber": 1312,
                "endColumn": 45
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1371,
                "startColumn": 39,
                "endLineNumber": 1371,
                "endColumn": 62
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1388,
                "startColumn": 28,
                "endLineNumber": 1388,
                "endColumn": 51
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1402,
                "startColumn": 15,
                "endLineNumber": 1402,
                "endColumn": 38
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1551,
                "startColumn": 15,
                "endLineNumber": 1551,
                "endColumn": 38
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1573,
                "startColumn": 15,
                "endLineNumber": 1573,
                "endColumn": 38
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1595,
                "startColumn": 49,
                "endLineNumber": 1595,
                "endColumn": 72
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1607,
                "startColumn": 15,
                "endLineNumber": 1607,
                "endColumn": 38
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1613,
                "startColumn": 34,
                "endLineNumber": 1613,
                "endColumn": 57
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1616,
                "startColumn": 19,
                "endLineNumber": 1616,
                "endColumn": 42
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1619,
                "startColumn": 21,
                "endLineNumber": 1619,
                "endColumn": 44
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1620,
                "startColumn": 25,
                "endLineNumber": 1620,
                "endColumn": 48
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1637,
                "startColumn": 21,
                "endLineNumber": 1637,
                "endColumn": 44
              }
            },
            {
              "uri": {
                "$mid": 1,
                "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                "scheme": "file"
              },
              "range": {
                "startLineNumber": 1638,
                "startColumn": 25,
                "endLineNumber": 1638,
                "endColumn": 48
              }
            }
          ],
          "toolCallId": "8a212284-803a-4b79-b29a-4c3542938ea8",
          "toolId": "copilot_findTextInFiles"
        },
        {
          "value": "Listing validation directory to locate extract_vector_stack.py. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_listDirectory"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation",
                "scheme": "file"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation",
                "scheme": "file"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "250e5136-00fd-4f6a-9816-d36877c13b33",
          "toolId": "copilot_listDirectory"
        },
        {
          "value": "Reading extract_vector_stack.py for classifier configuration. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#1-1), lines 1 to 260",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#1-1": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                "scheme": "file",
                "fragment": "1-1"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#1-1), lines 1 to 260",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#1-1": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                "scheme": "file",
                "fragment": "1-1"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "50a29f5b-5a92-4b3d-8607-988c2b4f0b09",
          "toolId": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#260-260), lines 260 to 520",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#260-260": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                "scheme": "file",
                "fragment": "260-260"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#260-260), lines 260 to 520",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#260-260": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                "scheme": "file",
                "fragment": "260-260"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "021d2591-c50c-4b79-8158-b155364549b4",
          "toolId": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#520-520), lines 520 to 667",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#520-520": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                "scheme": "file",
                "fragment": "520-520"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#520-520), lines 520 to 667",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py#520-520": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                "scheme": "file",
                "fragment": "520-520"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "f8f948b7-1239-4a22-a241-d0daeb535546",
          "toolId": "copilot_readFile"
        },
        {
          "value": "Recapping the interrupted run and setting up a focused plan to diagnose + fix LR/SVM convergence issues.\n\n## Checklist\n- Summarize current metrics artifacts\n- Identify anomalies (confusion matrices, class balance hints)\n- Compute / recall expected feature dimensionality & sparsity factors\n- Diagnose likely root causes of very slow / non‑convergence\n- Recommend concrete diagnostics to add for next rerun\n- Propose faster rerun parameter set (without sacrificing evaluation integrity)\n- Outline deeper remediation paths (if sparsity / class imbalance confirmed)\n\n## 1. What we have (metrics_with_flags.json excerpt)\nModels (all marked non‑degradation):\n- Logistic Regression: PR-AUC 0.7763, ROC-AUC 0.6476, best F1 0.8316\n- Linear SVM: PR-AUC 0.7936, ROC-AUC 0.6931, best F1 0.8611\n- Gradient Boosted Trees: PR-AUC 0.8056, ROC-AUC 0.6729, best F1 0.8419 (feature importances saved)\n\nAnomaly: Confusion matrices serialized as something like [[934], []] instead of a normal 2×2 (same for others). That strongly suggests one of:\n1. Only one class present in y_test (scikit returns 1×1 matrix) and our serialization logic inadvertently appended an empty second row somewhere upstream, or\n2. Data corruption / partial write during interruption.\n\nIf y_test truly had a single class, ROC-AUC should raise an exception—so more likely the file got truncated mid-write or the confusion matrix object got mutated (less likely). We need to re-derive confusion matrices on rerun to confirm.\n\n## 2. Expected vector stack feature dimensionality\nPer homology dimension (H0, H1):\n- Landscapes: levels=3, resolutions=(100,300) → 3*(100+300)=1200\n- Persistence Images: (16×16 + 32×32)=256+1024=1280\n- Betti curve: 300\n- SW projections: angles=48 (or 32 earlier), resolution=300 → 48*300=14,400\n- Kernel small/large: 32 + 32 = 64\nSubtotal per dim ≈ 17,244; for two dims ≈ 34,488 dense features.\n\nThis size is moderate, but:\n- Many blocks (landscapes/images/betti) contain large low-variance or near-zero regions.\n- SW projection block dominates (≈ 83% of features), potentially poorly scaled despite per-block z-score (because internal distributions can be very flat).\n\n## 3. Likely causes of very slow convergence\n1. Calibration multiplies cost: CalibratedClassifierCV with 3-fold CV trains logistic regression (and SVM) 3 extra times each. With max_iter=8000 and possible early plateaus, this alone can push runtime >1h if solver struggles.\n2. L1 penalty (lr_penalty=l1) with saga on moderately high-dimensional, low-signal blocks tends to produce many near-zero coefficient updates → slow shrinkage, especially with tolerance 1e-3 if gradients are tiny.\n3. Class imbalance: If attack rate is low, class_weight='balanced' inflates minority gradients; if combined with only a handful of positive samples per fold, variance increases iteration counts.\n4. LinearSVC default dual=True may be suboptimal depending on n_samples vs n_features (if n_samples >> n_features, dual=False is faster; if n_features >> n_samples, dual=True is ok—but we need counts).\n5. Potential quasi-collinearity: SW + images + landscapes can yield highly correlated columns making optimization slower.\n6. No feature pruning of constant / near-constant columns (e.g., empty landscapes for sparse diagrams) wastes cycles.\n7. Interrupted run may have been in calibration phase (worst-case repeated fits).\n\n## 4. Immediate diagnostics to add before next run\n(We should instrument ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "inlineReference",
          "inlineReference": {
            "$mid": 1,
            "fsPath": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
            "external": "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
            "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
            "scheme": "file"
          }
        },
        {
          "value": " in next step.)\nCapture and persist:\n- n_samples_train, n_samples_test, class counts (both classes) and attack_rate.\n- Per-model training wall time and (for LR) n_iter_ (from estimator or from each CV fold).\n- Convergence flags: whether n_iter_ hit max_iter (store boolean).\n- SVM dual/primal selection and n_iter_ (LinearSVC exposes n_iter_ as an array).\n- Count of zero-variance features after normalization (fast: (X_train.std(axis=0)==0).sum()).\n- Mean / median absolute coefficient magnitude after LR fit (sanity of shrinkage).\n- Optional: For each block span, fraction of zero entries across train set (sparsity profile).\n\n## 5. Fast rerun parameter adjustments (exploratory)\nPrimary goal: Obtain clean metrics + convergence telemetry fast, not final peak performance.\n\nSuggested run (tier 1):\n- Disable calibration temporarily (--no-calibration) to remove 3× overhead.\n- Logistic Regression: switch penalty to l2 for speed OR keep l1 but relax max_iter and increase tol.\n  - Option A (speed baseline): penalty=l2, max_iter=2000, tol=5e-3\n  - Option B (retain sparsity): penalty=l1, max_iter=4000, tol=2e-3\n- Reduce SW angles from 48 -> 32 for this diagnostic pass (if orchestrator allows via --sw-angles 32) to drop ~4800 features (~14% reduction).\n- Linear SVM: add logic to set dual = (n_samples < n_features). If n_samples >> n_features, set dual=False. Raise tol to 1e-3 (default) or 2e-3.\n- (Optionally) Skip ablations (--skip-ablations) until convergence instrumentation verified.\n- Keep gradient boosted trees unchanged (serves as performance anchor).\n\nTier 2 (after instrumentation):\n- Implement zero-variance (or near-zero variance) feature pruning prior to fitting LR/SVM (simple mask). Persist mask for test transform.\n- Consider elasticnet (l1_ratio=0.3) with saga for balanced sparsity/performance.\n- If still slow, replace LinearSVC with SGDClassifier(loss='hinge', penalty='l2', class_weight='balanced', early_stopping=True) for a stochastic baseline.\n\n## 6. Root cause hypotheses to validate\n| Hypothesis | Evidence Needed | Action if True |\n|------------|-----------------|----------------|\n| Single-class test split (bad split) | Recompute class counts | Fix manifest splitting logic |\n| Extreme imbalance | Attack rate metrics | Threshold tuning / reweighting stable |\n| Overly strict solver settings | n_iter_ == max_iter | Relax tol, reduce features |\n| Redundant high-correlation blocks | Block-level variance & correlation sample | Potential dimensionality reduction (PCA on SW curves only) |\n| Many constant / zero columns | Zero-variance count | Prune before fit |\n\n## 7. Proposed next concrete steps\n1. Add instrumentation (as above) to extract script (and optionally orchestrator) before rerun.\n2. Rerun orchestrator with fast diagnostic parameter set:  \n   python ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "inlineReference",
          "inlineReference": {
            "$mid": 1,
            "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "scheme": "file"
          }
        },
        {
          "value": " --sw-angles 32 --lr-penalty l2 --lr-max-iter 2000 --svm-max-iter 4000 --baseline-pr 0.706 --no-calibration --skip-ablations\n3. Review new metrics + convergence telemetry.\n4. Decide whether to (a) re-enable calibration and (b) restore angles after confirming stability.\n\n(If you want, I can implement the instrumentation patch next.)\n\n## 8. Deeper remediation (only after confirming diagnostics)\n- Block-wise adaptive pruning: Remove blocks whose normalized mean absolute value < tiny threshold across train (likely empty signal).\n- SW downsampling: Use fewer angles + smaller resolution (e.g., 24 angles × 200) if minimal PR-AUC impact.\n- Replace dense float arrays with sparse COO for predominantly zero blocks (if measured sparsity >70%) and use solvers supporting sparse input (saga does).\n- Lightweight dimensionality reduction (TruncatedSVD) on SW portion only, retaining 95% variance, then concatenate other blocks.\n\n## 9. Quick interpretation of current metrics quality\nPR-AUC ~0.78–0.81 across models already clears baseline 0.706 (no degradation). So performance is acceptable; bottleneck is training efficiency & reliability, not accuracy regression.\n\n## 10. Recommendation\nProceed with instrumentation + fast rerun before changing core feature construction. Avoid premature structural pruning until we have empirical sparsity / variance stats.\n\nLet me know and I can immediately apply the instrumentation edits and trigger the new run. Would you like me to implement the patch now?",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        }
      ],
      "responseId": "response_6ba8504c-ea5d-4ad9-9fa5-32276cdee164",
      "result": {
        "timings": {
          "firstProgress": 29189,
          "totalElapsed": 86008
        },
        "metadata": {
          "codeBlocks": [],
          "renderedUserMessage": [
            {
              "type": 1,
              "text": "<attachments>\n<attachment id=\"metrics.json\" isSummarized=\"true\" filePath=\"/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics.json\">\n</attachment>\n<attachment id=\"metrics_with_flags.json\" isSummarized=\"true\" filePath=\"/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics_with_flags.json\">\n```json\n{\n  \"logistic_regression\": {\n    \"pr_auc\": 0.7762513364431687,\n    \"roc_auc\": 0.6475709233397345,\n    \"best_f1\": 0.8316400580546631,\n    \"best_threshold\": 0.16802837349421043,\n    \"confusion_default\": [\n      [\n        934\n      ],\n      [\n      ]\n    ],\n    \"confusion_best\": [\n      [\n        1087\n      ],\n      [\n      ]\n    ],\n    \"degradation_flag\": false\n  },\n  \"linear_svm\": {\n    \"pr_auc\": 0.7936253517971881,\n    \"roc_auc\": 0.6931258076257953,\n    \"best_f1\": 0.8611442193082086,\n    \"best_threshold\": 0.44722948739851204,\n    \"confusion_default\": [\n      [\n        841\n      ],\n      [\n      ]\n    ],\n    \"confusion_best\": [\n      [\n        884\n      ],\n      [\n      ]\n    ],\n    \"degradation_flag\": false\n  },\n  \"gradient_boosted_trees\": {\n    \"pr_auc\": 0.805568416665146,\n    \"roc_auc\": 0.6728978254376121,\n    \"best_f1\": 0.8418772563172008,\n    \"best_threshold\": 0.04889282280308559,\n    \"confusion_default\": [\n      [\n        578\n      ],\n      [\n      ]\n    ],\n    \"confusion_best\": [\n      [\n        1072\n      ],\n      [\n      ]\n    ],\n    \"feature_importances\": [\n      0.0,\n      0.0,\n      0.001690261771818063,\n      0.0010985725528466566,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00028301368888644125,\n      0.0,\n      0.0,\n      0.0,\n      0.0005970108460280532,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00010032420642566736,\n      0.0,\n      0.0,\n      0.000857388920229718,\n      0.0,\n      0.0002141588678033617,\n      0.0,\n      0.00010018158030669744,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0003890690955727731,\n      1.4786641729217066e-07,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0001921988241780095,\n      0.00014947651748108102,\n      0.0,\n      0.0,\n      0.0,\n      0.0008412727760645196,\n      0.0018457180788622085,\n      0.0,\n      0.0,\n      0.0,\n      0.0021635792951105516,\n      0.0004680333340801087,\n      0.0,\n      0.00011689683432936779,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.004459286157656053,\n      0.0,\n      0.0,\n      0.0012898186823102342,\n      0.01181299900021359,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0006853346785110412,\n      0.00028497062216174796,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      4.189524967872312e-05,\n      0.0,\n      2.5332883534794224e-05,\n      0.0,\n      0.0,\n      0.00020628943303294697,\n      0.0,\n      0.004184932953081938,\n      0.0,\n      0.0,\n      0.0,\n      0.0002504812653390319,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00022887768020829575,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.000373896895714731,\n      0.00022972815323319545,\n      0.0008197018512986139,\n      0.0,\n      0.0,\n      0.0038005810813983663,\n      0.1972105205110495,\n      0.0064571811544381925,\n      0.0008025985096427611,\n      0.0,\n      0.0012579448921817339,\n      0.0006762394326727968,\n      0.0001514679690956553,\n      0.011326935984881341,\n      0.00021656832335935025,\n      0.0,\n      0.0,\n      0.0,\n      0.0016682046610427452,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0005068847309821782,\n      0.0,\n      0.00043185648238041816,\n      0.0,\n      0.0,\n      0.00041252350256298107,\n      0.0,\n      0.0,\n      0.0001610444237257533,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0001908191296126841,\n      0.0,\n      0.00014615565740796696,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0005096536573687221,\n      0.0,\n      0.0,\n      0.0,\n      0.00014593590475403816,\n      0.0,\n      0.0,\n      0.0,\n      0.000382041118771048,\n      0.00011836202458420769,\n      0.0,\n      9.442543059378954e-05,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0006085980136358488,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      3.972407890620522e-05,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0014894174621016218,\n      0.0006467723679667444,\n      0.0021522760153146318,\n      0.0006058225247248937,\n      1.765921455814007e-05,\n      0.0,\n      0.00014258419682825762,\n      0.0,\n      0.0,\n      0.0,\n      2.0872785462320805e-05,\n      0.0,\n      0.0,\n      0.0,\n      0.0014471230303423433,\n      0.0030045130264633305,\n      0.0005884046267393358,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00021988356044922605,\n      0.0,\n      0.0,\n      0.0,\n      0.0003023604537655748,\n      0.0,\n      0.00046059458629441405,\n      0.0,\n      0.0,\n      0.004240775379690929,\n      0.0006614170164090138,\n      0.0,\n      0.0012905590671624728,\n      0.0,\n      0.0,\n      0.000329680667716049,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.003304663155038388,\n      0.0,\n      0.0,\n      0.0,\n      0.00010156839225728815,\n      0.0002391420807564284,\n      0.0,\n      0.0,\n      0.0005814579919387024,\n      0.009223598958321423,\n      0.001157003845017947,\n      0.006199198552703499,\n      0.00147246363265359,\n      0.0,\n      0.0,\n      0.0,\n      0.0005625414608243382,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00034027283958869303,\n      0.0,\n      0.0002543963992171632,\n      0.0,\n      0.0,\n      0.0002109307141206945,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.004842649083580712,\n      0.00012949666955737365,\n      0.0,\n      0.0011324317134249644,\n      0.0024962393802570614,\n      0.0,\n      0.0,\n      0.00014648470208522853,\n      0.0,\n      0.0,\n      0.00026905588788366154,\n      0.0,\n      0.0,\n      0.0,\n      0.0011317553574630437,\n      0.0,\n      0.0,\n      0.00018912317396710125,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0003416070400129547,\n      0.0001732437428533403,\n      0.0017735744324877366,\n      0.0,\n      9.873703134452855e-05,\n      0.002271300284390417,\n      0.0004079011701351159,\n      0.0005677197061724003,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0004454828774402059,\n      9.84449435612643e-05,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0009448662131579013,\n      0.0,\n      0.0,\n      0.0,\n      0.0002672683082526586,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      7.647132934130274e-05,\n      4.2854964435548754e-07,\n      0.0002728366342741973,\n      0.00012047160957200681,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0001469667435979473,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0005521026081807632,\n      0.0,\n      0.0,\n      0.0,\n      0.0004584588360186151,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00020019160576818047,\n      0.0005206617429110815,\n      0.0,\n      0.0,\n      0.0,\n      0.00011684976072315547,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00010465631170569714,\n      0.0,\n      0.005438250683668552,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0003972626685027777,\n      0.0,\n      0.0005416461756510583,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0009575432982895315,\n      0.00017806161554299993,\n      0.0,\n      0.00132437426821959,\n      0.0,\n      0.0,\n      2.7973034419052367e-05,\n      0.0,\n      0.00035180084809922847,\n      0.002776187388188857,\n      0.00287411477893333,\n      0.0,\n      0.0,\n      0.00019128349675935286,\n      3.445605179185478e-05,\n      1.3602191812471766e-05,\n      0.0,\n      0.0,\n      0.001802710853487028,\n      0.0005290682889872661,\n      0.0,\n      0.0,\n      0.000410815556331862,\n      0.0007091250031245206,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0012917589388840697,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0015628062218188295,\n      0.0,\n      6.157386213249899e-05,\n      0.007359558653366925,\n      0.0,\n      0.0,\n      0.0,\n      0.001882120208239163,\n      0.001385158603620861,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0002689904582008566,\n      4.1488719906913826e-05,\n      0.0002381386994248408,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00028613830829606415,\n      0.00020606634125284405,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0037747230904807503,\n      0.0,\n      0.0,\n      0.0,\n      0.00033817871467309004,\n      0.0002047778169879992,\n      0.002613400451503585,\n      0.0,\n      0.0004621850241503281,\n      0.0014323297564834902,\n      0.0008227244875585755,\n      0.0,\n      0.0,\n      0.007914306512845696,\n      0.0021234566073867374,\n      0.00476913953032424,\n      0.014076400702157396,\n      0.010484975405998579,\n      0.007346726416835833,\n      0.11904527425139078,\n      0.0033689582722682384,\n      0.0007507023079871958,\n      0.0015286817319223177,\n      0.0,\n      0.0,\n      9.349314533745036e-05,\n      0.0002601061353137559,\n      0.0,\n      0.0,\n      6.451785203548132e-05,\n      0.0,\n      0.0002175930996340004,\n      0.01439954665624105,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00015413780363453833,\n      0.0010084421337444305,\n      0.00018863131903921234,\n      0.000117144628865745,\n      0.00013403949120596243,\n      0.0,\n      0.0,\n      0.00021427243008523706,\n      0.0004538933721050993,\n      0.0,\n      0.0,\n      0.0006299794511666216,\n      0.0018287168691834778,\n      0.00016649707326874823,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      2.0578922877700362e-05,\n      1.7552671070475912e-05,\n      0.0,\n      0.0,\n      0.0007161758242770053,\n      0.0,\n      0.00018426164985913102,\n      0.0,\n      0.0,\n      0.001638210405302216,\n      0.002852638401801591,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0003961352495530393,\n      0.0,\n      0.0,\n      0.0,\n      0.0013583010136148,\n      0.00010815869934562113,\n      0.0,\n      0.00026489275264153576,\n      0.0,\n      0.0,\n      0.0008899135445553406,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.003990179368295175,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00011227597652134976,\n      0.0,\n      0.0,\n      0.000246799814286526,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0002002044124292325,\n      0.0003116201757308264,\n      0.0,\n      0.0,\n      0.0,\n      0.0006559577404692797,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      8.952351369595016e-05,\n      0.0,\n      0.0003467126337016962,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0001708344622102331,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00017555225440299757,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0002881010160079681,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0005400199311805996,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0002989140729288929,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.007538975200073598,\n      0.00022051774800995486,\n      0.006272816784278843,\n      0.0,\n      0.00026309791356991504,\n      0.0,\n      0.0,\n      0.009518084969497553,\n      0.002637738309595842,\n      0.0002107724664961586,\n      0.0,\n      0.005430842140617725,\n      0.0,\n      0.0,\n      0.0001333321973814404,\n      0.0,\n      0.0,\n      0.0007133451217919213,\n      0.0003701347554564823,\n      0.0,\n      0.0,\n      0.0,\n      0.0003486848700428785,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0004748179840022912,\n      0.0001482205320103828,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00020571119934735953,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0006386548942801096,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.000211863956760051,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00024063210648844803,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      6.72169678829373e-05,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.000734766906963355,\n      8.015447291156999e-05,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.00019915145322496234,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      2.3112605359706374e-06,\n      0.0,\n      0.0001940310597558144,\n      0.0,\n      0.0,\n      0.0,\n      0.0022239001131050553,\n      0.00012591782257529384,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0,\n      0.0\n    ],\n    \"degradation_flag\": false\n  }\n}\n```\n</attachment>\n</attachments>\n<context>\nThe current date is August 9, 2025.\nTasks: No tasks found.Terminals:\nTerminal: bash\nOutput: {Use get_terminal_output for terminal with ID: 8121.}\nTerminal: bash\nOutput: {Use get_terminal_output for terminal with ID: 6839.}\n\n</context>\n<editorContext>\nThe user's current file is /home/stephen-dorman/dev/TDA_projects/validation/vector_stack_outputs/20250809_061724/results/metrics_with_flags.json. \n</editorContext>\n<repoContext>\nBelow is the information about the current repository. You can use this information when you need to calculate diffs or compare changes with the default branch.\nRepository name: TDA_projects\nOwner: stephendor\nCurrent branch: main\n\n</repoContext>\n<reminderInstructions>\nYou are an agent—keep going until the user's query is completely resolved before ending your turn. ONLY stop if solved or genuinely blocked.\nTake action when possible; the user expects you to do useful work without unnecessary questions.\nAfter any parallel, read-only context gathering, give a concise progress update and what's next.\nAvoid repetition across turns: don't restate unchanged plans or sections (like the todo list) verbatim; provide delta updates or only the parts that changed.\nTool batches: You MUST preface each batch with a one-sentence why/what/outcome preamble.\nProgress cadence: After 3 to 5 tool calls, or when you create/edit > ~3 files in a burst, pause and post a compact checkpoint.\nRequirements coverage: Read the user's ask in full, extract each requirement into checklist items, and keep them visible. Do not omit a requirement. If something cannot be done with available tools, note why briefly and propose a viable alternative.\nWhen using the insert_edit_into_file tool, avoid repeating existing code, instead use a line comment with \\`...existing code...\\` to represent regions of unchanged code.\nSkip filler acknowledgements like “Sounds good” or “Okay, I will…”. Open with a purposeful one-liner about what you're doing next.\nWhen sharing setup or run steps, present terminal commands in fenced code blocks with the correct language tag. Keep commands copyable and on separate lines.\nAvoid definitive claims about the build or runtime setup unless verified from the provided context (or quick tool checks). If uncertain, state what's known from attachments and proceed with minimal steps you can adapt later.\nWhen you create or edit runnable code, run a test yourself to confirm it works; then share optional fenced commands for more advanced runs.\nDo not state your identity or model name unless the user explicitly asks you to. \nFor non-trivial code generation, produce a complete, runnable solution: necessary source files, a tiny runner or test/benchmark harness, a minimal `README.md`, and updated dependency manifests (e.g., `package.json`, `requirements.txt`, `pyproject.toml`). Offer quick \"try it\" commands and optional platform-specific speed-ups when relevant.\nYour goal is to act like a pair programmer: be friendly and helpful. If you can do more, do more. Be proactive with your solutions, think about what the user needs and what they want, and implement it proactively.\n<importantReminders>\nALWAYS start your response with a brief task receipt and a concise high-level plan for how you will proceed.\nBreak down the request into clear, actionable steps and present them as a checklist at the beginning of your response before proceeding with implementation. This helps maintain visibility and ensures all requirements are addressed systematically.\nEvery so often, explain the notable action you are about to take next, especially before multi-step or impactful tool calls.\n\n</importantReminders>\n\n</reminderInstructions>\n<userRequest>\nOkay, unfortunately our most recent run was interrupted by another extension reloading VS Code. However there are some result files available for analysis. We will need to rerun the vector_stack process using the experiment orchestrator again. Note that Liblinear and SVM both failed to converge again and they took an immense amount of time to do so. Liblinear I think was over an hour and SVM had not fully converged when it was closed after two hours. So we need to investigate these things a bit more. i.e improve performance in terms of convergence and speed. This may be a deeper issue with sparseness of the homology data. Let's get ourselves back up to speed with what happened in this run first. (See <attachments> above for file contents. You may not need to search or read the file again.)\n</userRequest>\n"
            },
            {
              "type": 3,
              "cacheType": "ephemeral"
            }
          ],
          "renderedGlobalContext": [
            {
              "type": 1,
              "text": "<environment_info>\nThe user's current OS is: Linux\nThe user's default shell is: \"bash\". When you generate terminal commands, please generate them correctly for this shell.\n</environment_info>\n<workspace_info>\nI am working in a workspace with the following folders:\n- /home/stephen-dorman/dev/TDA_projects \nI am working in a workspace that has the following structure:\n```\n[claude-vector-stack].txt\n=0.8.0\n=1.13.3\nA Review of Topological Data Analysis.md\nbest_deep_tda_model.pth\nbest_real_data_deep_tda_model.pth\nChatGPT5NextPhase.md\nclaude.md\nCRITICAL_STEPS_COMPLETION.md\ndd\ndocker-compose.yml\nDockerfile\ngemini.md\nGeminiNextPhase.md\ngudhi-3.11.0-cp313-cp313-manylinux_2_28_x86_64.whl\nlast_run.log\nLICENSE\nMakefile\nMETHODOLOGY_GRAVEYARD.md\nmulti_attack_tda_analysis.json\nPROJECT_STRUCTURE_UPDATE.md\npytest.ini\nREADME.md\nrequirements.txt\nREUSABLE_COMPONENTS.md\nsetup.py\nTDA_AUTHORITATIVE_STATUS.md\nTDA_IMPROVEMENT_STRATEGY_SUMMARY.md\nTDA_IMPROVEMENT_STRATEGY.md\nTDA_ML_Ideas.md\nTDA_Projects refined.md\nTDA_Projects_1_Claude\ntda_topology_enhancement_analysis.json\ntmp_stream_test.parquet\nUNIFIED_AGENT_INSTRUCTIONS.md\nzen-wrapper.sh\n__pycache__/\n\tdeep_tda_breakthrough.cpython-313.pyc\n\tenhanced_point_cloud_construction.cpython-313.pyc\n\tenhanced_tda_with_ripser.cpython-313.pyc\n\thybrid_multiscale_graph_tda.cpython-313.pyc\n\timplement_graph_based_tda.cpython-313.pyc\n\toptimize_hybrid_ensemble.cpython-313.pyc\n\tpersistence_feature_enhancement.cpython-313.pyc\n\ttda_supervised_ensemble.cpython-313.pyc\narchive/\n\tclean_streaming_tda_validation.py\n\tstatus_docs/\nautomation/\n\ttda_deep_learning_research_pipeline_v2_crewai-project.zip\n\ttda_deep_learning_research_pipeline_v2_crewai-project/\nconfigs/\n\tdataset_cic.yaml\ndaily_logs/\n\t20250807_collins_network_structure_tda_implementation.md\ndata/\n\tapt_datasets/\ndocker/\n\tgrafana/\n\tpostgres/\n\tprometheus/\nexamples/\n\tapt_detection_example.py\n\tapt_detection_results.png\nexternal_repos/\n\tREADME_external.md\n\tawesome-tnns/\n\tawesome-topological-deep-learning/\n\tchallenge-iclr-2021/\n\tchallenge-iclr-2022/\n\tchallenge-icml-2024/\n\tdeep-topology/\n\tDeepLearningFinal/\n\tgeometriclearning/\n\tgeomstats/\n\tgiotto-deep/\n\tIntroduction-to-Topological-Deep-Learning/\n\tjmlr_2019/\n\tnew/\n\tperslay/\n\tTDA-DL/\n\tTopoBench/\n\t...\nmkdir/\nnotebooks/\n\t...\nresults/\n\t...\nscripts/\nsrc/\ntda_platform.egg-info/\ntda_validation_outputs/\ntests/\nvalidation/\nworkspace_chats/\n```\nThis is the state of the context at this point in the conversation. The view of the workspace structure may be truncated. You can use tools to collect more context if needed.\n</workspace_info>\n"
            },
            {
              "type": 3,
              "cacheType": "ephemeral"
            }
          ],
          "toolCallRounds": [
            {
              "response": "Gathering code context for vector stack orchestration, solver settings, and last run log to accurately summarize the interrupted run and diagnose convergence issues. ",
              "toolCalls": [
                {
                  "name": "grep_search",
                  "arguments": "{\"query\":\"vector_stack\",\"isRegexp\":false}",
                  "id": "call_0HnyDdEup7lNSB8tT5TSZJP2__vscode-1754745970682"
                }
              ],
              "toolInputRetry": 0,
              "id": "ef7029e4-9a81-4120-a3fc-6879de80de8b"
            },
            {
              "response": "Reading vector_stack module and extraction script to understand feature sparsity and solver configuration. ",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py\",\"startLine\":1,\"endLine\":350}",
                  "id": "call_QiFykSmFYQfljs2z0HQY2b4X__vscode-1754745970683"
                }
              ],
              "toolInputRetry": 0,
              "id": "d9a2754d-4d91-4172-a2d1-6b89190623b4"
            },
            {
              "response": "",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py\",\"startLine\":351,\"endLine\":502}",
                  "id": "call_3MyK1ostKqWszd8B3R127y22__vscode-1754745970684"
                }
              ],
              "toolInputRetry": 0,
              "id": "a967dfb8-4ffb-4490-ab8f-bb1203e4b578"
            },
            {
              "response": "Searching for experiment orchestrator and solver configuration related to logistic regression, linear SVM, liblinear. ",
              "toolCalls": [
                {
                  "name": "grep_search",
                  "arguments": "{\"query\":\"ExperimentOrchestrator\"}",
                  "id": "call_KXFDMJ3qzeg30cPh1D6QIzgi__vscode-1754745970685"
                }
              ],
              "toolInputRetry": 0,
              "id": "3b087aaa-057b-45c6-bb32-66d718456085"
            },
            {
              "response": "",
              "toolCalls": [
                {
                  "name": "grep_search",
                  "arguments": "{\"query\":\"orchestrator\",\"isRegexp\":false}",
                  "id": "call_mmh5ROmuZep9kiHU6gnSRXJd__vscode-1754745970686"
                }
              ],
              "toolInputRetry": 1,
              "id": "5c39f1f0-22b2-40eb-b950-501bd987392a"
            },
            {
              "response": "Reading orchestrator script to understand pipeline and classifier settings. ",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\",\"startLine\":1,\"endLine\":250}",
                  "id": "call_WPoxwPOcBulxIXPdTuBqylTO__vscode-1754745970687"
                }
              ],
              "toolInputRetry": 0,
              "id": "3d1a2eba-04c5-44e9-8136-e75fb0c727ef"
            },
            {
              "response": "",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\",\"startLine\":251,\"endLine\":404}",
                  "id": "call_CUdAWCsxUKQXH0Rs2NqLx7Cb__vscode-1754745970688"
                }
              ],
              "toolInputRetry": 0,
              "id": "80925eb5-7de4-45b4-bb91-8d5660948d27"
            },
            {
              "response": "Searching extract_vector_stack script for classifier implementations and solver settings. ",
              "toolCalls": [
                {
                  "name": "grep_search",
                  "arguments": "{\"query\":\"extract_vector_stack.py\",\"isRegexp\":false}",
                  "id": "call_eXBJJjAmdWSRAfPVmcT3geY7__vscode-1754745970689"
                }
              ],
              "toolInputRetry": 0,
              "id": "1da16f73-c90e-4851-8f95-0b4de0503672"
            },
            {
              "response": "Listing validation directory to locate extract_vector_stack.py. ",
              "toolCalls": [
                {
                  "name": "list_dir",
                  "arguments": "{\"path\":\"/home/stephen-dorman/dev/TDA_projects/validation\"}",
                  "id": "call_8anpGnZ2ENRjjCRgsvg8IpTF__vscode-1754745970690"
                }
              ],
              "toolInputRetry": 0,
              "id": "42b31ba1-6572-4384-966a-966ef4308398"
            },
            {
              "response": "Reading extract_vector_stack.py for classifier configuration. ",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py\",\"startLine\":1,\"endLine\":260}",
                  "id": "call_K1gnvvxP6TI6p1oSZNa5GkRk__vscode-1754745970691"
                }
              ],
              "toolInputRetry": 0,
              "id": "01c70f93-d896-401a-a182-187c14681d29"
            },
            {
              "response": "",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py\",\"startLine\":260,\"endLine\":520}",
                  "id": "call_jqidxOLMO74yvuFhB1RgBsJi__vscode-1754745970692"
                }
              ],
              "toolInputRetry": 0,
              "id": "f2dc2560-ca3a-4fbc-859d-98a90cacc264"
            },
            {
              "response": "",
              "toolCalls": [
                {
                  "name": "read_file",
                  "arguments": "{\"filePath\":\"/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py\",\"startLine\":520,\"endLine\":667}",
                  "id": "call_AiHGXJJaC1JHFKAWIArCbb92__vscode-1754745970693"
                }
              ],
              "toolInputRetry": 0,
              "id": "34bb2976-02b6-4470-bab5-c4dbf586763f"
            },
            {
              "response": "Recapping the interrupted run and setting up a focused plan to diagnose + fix LR/SVM convergence issues.\n\n## Checklist\n- Summarize current metrics artifacts\n- Identify anomalies (confusion matrices, class balance hints)\n- Compute / recall expected feature dimensionality & sparsity factors\n- Diagnose likely root causes of very slow / non‑convergence\n- Recommend concrete diagnostics to add for next rerun\n- Propose faster rerun parameter set (without sacrificing evaluation integrity)\n- Outline deeper remediation paths (if sparsity / class imbalance confirmed)\n\n## 1. What we have (metrics_with_flags.json excerpt)\nModels (all marked non‑degradation):\n- Logistic Regression: PR-AUC 0.7763, ROC-AUC 0.6476, best F1 0.8316\n- Linear SVM: PR-AUC 0.7936, ROC-AUC 0.6931, best F1 0.8611\n- Gradient Boosted Trees: PR-AUC 0.8056, ROC-AUC 0.6729, best F1 0.8419 (feature importances saved)\n\nAnomaly: Confusion matrices serialized as something like [[934], []] instead of a normal 2×2 (same for others). That strongly suggests one of:\n1. Only one class present in y_test (scikit returns 1×1 matrix) and our serialization logic inadvertently appended an empty second row somewhere upstream, or\n2. Data corruption / partial write during interruption.\n\nIf y_test truly had a single class, ROC-AUC should raise an exception—so more likely the file got truncated mid-write or the confusion matrix object got mutated (less likely). We need to re-derive confusion matrices on rerun to confirm.\n\n## 2. Expected vector stack feature dimensionality\nPer homology dimension (H0, H1):\n- Landscapes: levels=3, resolutions=(100,300) → 3*(100+300)=1200\n- Persistence Images: (16×16 + 32×32)=256+1024=1280\n- Betti curve: 300\n- SW projections: angles=48 (or 32 earlier), resolution=300 → 48*300=14,400\n- Kernel small/large: 32 + 32 = 64\nSubtotal per dim ≈ 17,244; for two dims ≈ 34,488 dense features.\n\nThis size is moderate, but:\n- Many blocks (landscapes/images/betti) contain large low-variance or near-zero regions.\n- SW projection block dominates (≈ 83% of features), potentially poorly scaled despite per-block z-score (because internal distributions can be very flat).\n\n## 3. Likely causes of very slow convergence\n1. Calibration multiplies cost: CalibratedClassifierCV with 3-fold CV trains logistic regression (and SVM) 3 extra times each. With max_iter=8000 and possible early plateaus, this alone can push runtime >1h if solver struggles.\n2. L1 penalty (lr_penalty=l1) with saga on moderately high-dimensional, low-signal blocks tends to produce many near-zero coefficient updates → slow shrinkage, especially with tolerance 1e-3 if gradients are tiny.\n3. Class imbalance: If attack rate is low, class_weight='balanced' inflates minority gradients; if combined with only a handful of positive samples per fold, variance increases iteration counts.\n4. LinearSVC default dual=True may be suboptimal depending on n_samples vs n_features (if n_samples >> n_features, dual=False is faster; if n_features >> n_samples, dual=True is ok—but we need counts).\n5. Potential quasi-collinearity: SW + images + landscapes can yield highly correlated columns making optimization slower.\n6. No feature pruning of constant / near-constant columns (e.g., empty landscapes for sparse diagrams) wastes cycles.\n7. Interrupted run may have been in calibration phase (worst-case repeated fits).\n\n## 4. Immediate diagnostics to add before next run\n(We should instrument extract_vector_stack.py in next step.)\nCapture and persist:\n- n_samples_train, n_samples_test, class counts (both classes) and attack_rate.\n- Per-model training wall time and (for LR) n_iter_ (from estimator or from each CV fold).\n- Convergence flags: whether n_iter_ hit max_iter (store boolean).\n- SVM dual/primal selection and n_iter_ (LinearSVC exposes n_iter_ as an array).\n- Count of zero-variance features after normalization (fast: (X_train.std(axis=0)==0).sum()).\n- Mean / median absolute coefficient magnitude after LR fit (sanity of shrinkage).\n- Optional: For each block span, fraction of zero entries across train set (sparsity profile).\n\n## 5. Fast rerun parameter adjustments (exploratory)\nPrimary goal: Obtain clean metrics + convergence telemetry fast, not final peak performance.\n\nSuggested run (tier 1):\n- Disable calibration temporarily (--no-calibration) to remove 3× overhead.\n- Logistic Regression: switch penalty to l2 for speed OR keep l1 but relax max_iter and increase tol.\n  - Option A (speed baseline): penalty=l2, max_iter=2000, tol=5e-3\n  - Option B (retain sparsity): penalty=l1, max_iter=4000, tol=2e-3\n- Reduce SW angles from 48 -> 32 for this diagnostic pass (if orchestrator allows via --sw-angles 32) to drop ~4800 features (~14% reduction).\n- Linear SVM: add logic to set dual = (n_samples < n_features). If n_samples >> n_features, set dual=False. Raise tol to 1e-3 (default) or 2e-3.\n- (Optionally) Skip ablations (--skip-ablations) until convergence instrumentation verified.\n- Keep gradient boosted trees unchanged (serves as performance anchor).\n\nTier 2 (after instrumentation):\n- Implement zero-variance (or near-zero variance) feature pruning prior to fitting LR/SVM (simple mask). Persist mask for test transform.\n- Consider elasticnet (l1_ratio=0.3) with saga for balanced sparsity/performance.\n- If still slow, replace LinearSVC with SGDClassifier(loss='hinge', penalty='l2', class_weight='balanced', early_stopping=True) for a stochastic baseline.\n\n## 6. Root cause hypotheses to validate\n| Hypothesis | Evidence Needed | Action if True |\n|------------|-----------------|----------------|\n| Single-class test split (bad split) | Recompute class counts | Fix manifest splitting logic |\n| Extreme imbalance | Attack rate metrics | Threshold tuning / reweighting stable |\n| Overly strict solver settings | n_iter_ == max_iter | Relax tol, reduce features |\n| Redundant high-correlation blocks | Block-level variance & correlation sample | Potential dimensionality reduction (PCA on SW curves only) |\n| Many constant / zero columns | Zero-variance count | Prune before fit |\n\n## 7. Proposed next concrete steps\n1. Add instrumentation (as above) to extract script (and optionally orchestrator) before rerun.\n2. Rerun orchestrator with fast diagnostic parameter set:  \n   python scripts/experiment_orchestrator.py --sw-angles 32 --lr-penalty l2 --lr-max-iter 2000 --svm-max-iter 4000 --baseline-pr 0.706 --no-calibration --skip-ablations\n3. Review new metrics + convergence telemetry.\n4. Decide whether to (a) re-enable calibration and (b) restore angles after confirming stability.\n\n(If you want, I can implement the instrumentation patch next.)\n\n## 8. Deeper remediation (only after confirming diagnostics)\n- Block-wise adaptive pruning: Remove blocks whose normalized mean absolute value < tiny threshold across train (likely empty signal).\n- SW downsampling: Use fewer angles + smaller resolution (e.g., 24 angles × 200) if minimal PR-AUC impact.\n- Replace dense float arrays with sparse COO for predominantly zero blocks (if measured sparsity >70%) and use solvers supporting sparse input (saga does).\n- Lightweight dimensionality reduction (TruncatedSVD) on SW portion only, retaining 95% variance, then concatenate other blocks.\n\n## 9. Quick interpretation of current metrics quality\nPR-AUC ~0.78–0.81 across models already clears baseline 0.706 (no degradation). So performance is acceptable; bottleneck is training efficiency & reliability, not accuracy regression.\n\n## 10. Recommendation\nProceed with instrumentation + fast rerun before changing core feature construction. Avoid premature structural pruning until we have empirical sparsity / variance stats.\n\nLet me know and I can immediately apply the instrumentation edits and trigger the new run. Would you like me to implement the patch now?",
              "toolCalls": [],
              "toolInputRetry": 0,
              "id": "7c170e87-2c0c-4303-8dad-e9edc26a40b9"
            }
          ],
          "toolCallResults": {
            "call_0HnyDdEup7lNSB8tT5TSZJP2__vscode-1754745970682": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "PFe",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 20,
                              "text": "20 matches (more results are available)",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {
                            "priority": 20
                          },
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py\" line=487>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 37
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "def build_vector_stack(diagrams_by_dim: Dict[int, np.ndarray], cfg: VectorStackConfig,",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 486,
                                            "character": 10
                                          },
                                          {
                                            "line": 486,
                                            "character": 22
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 37
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py\" line=500>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 38
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    'build_vector_stack',",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 499,
                                            "character": 11
                                          },
                                          {
                                            "line": 499,
                                            "character": 23
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 38
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md\" line=4>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 39
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "Enhance the current TDA vector_stack implementation by integrating advanced techniques from 12 newly cloned repositories to create more powerful topological feature representations.",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 3,
                                            "character": 24
                                          },
                                          {
                                            "line": 3,
                                            "character": 36
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 39
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md\" line=100>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 40
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "This plan leverages cutting-edge techniques from graph neural networks, attention mechanisms, and high-dimensional embeddings while preserving the stable foundation of the current vector_stack implementation.",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/external_repos/new/New-Repo-Research.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 99,
                                            "character": 180
                                          },
                                          {
                                            "line": 99,
                                            "character": 192
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 40
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md\" line=42>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 41
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  - Deterministic multi-block vector stack in `src.embeddings.vector_stack` (if using stacked topological liftings)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 41,
                                            "character": 62
                                          },
                                          {
                                            "line": 41,
                                            "character": 74
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 41
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md\" line=60>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 42
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "Validation scripts must reference `validation/extract_vector_stack.py` (or timestamped variant) for reproducibility.",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 59,
                                            "character": 54
                                          },
                                          {
                                            "line": 59,
                                            "character": 66
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 42
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md\" line=91>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 43
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "│   │   └── vector_stack/         # Deterministic multi-block vector stack implementation",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 90,
                                            "character": 12
                                          },
                                          {
                                            "line": 90,
                                            "character": 24
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 43
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md\" line=93>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 44
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "│   │       └── vector_stack.py",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 92,
                                            "character": 16
                                          },
                                          {
                                            "line": 92,
                                            "character": 28
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 44
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=783>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 45
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  # New module to create: src/embeddings/vector_stack.py providing:",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 782,
                                            "character": 41
                                          },
                                          {
                                            "line": 782,
                                            "character": 53
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 45
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=784>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 46
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  #   build_vector_stack(diagrams: dict[int -> np.ndarray], config) -> ",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 783,
                                            "character": 12
                                          },
                                          {
                                            "line": 783,
                                            "character": 24
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 46
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=842>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 47
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  1. Implement vector_stack module with deterministic functions (no training ",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 841,
                                            "character": 15
                                          },
                                          {
                                            "line": 841,
                                            "character": 27
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 47
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=844>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 48
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  2. Build extraction script validation/extract_vector_stack.py mirroring ",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 843,
                                            "character": 48
                                          },
                                          {
                                            "line": 843,
                                            "character": 60
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 48
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1100>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 49
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  1. Implement vector_stack module (as you outlined)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1099,
                                            "character": 15
                                          },
                                          {
                                            "line": 1099,
                                            "character": 27
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 49
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1118>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 50
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     │ 1. Create src/embeddings/vector_stack.py module                       │",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1117,
                                            "character": 32
                                          },
                                          {
                                            "line": 1117,
                                            "character": 44
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 50
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1122>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 51
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     │ 2. Build extraction script validation/extract_vector_stack.py         │",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1121,
                                            "character": 53
                                          },
                                          {
                                            "line": 1121,
                                            "character": 65
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 51
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1163>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 52
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Search(pattern: \"**/vector_stack.py\")",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1162,
                                            "character": 22
                                          },
                                          {
                                            "line": 1162,
                                            "character": 34
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 52
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1166>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 53
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Search(pattern: \"**/extract_vector_stack.py\")",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1165,
                                            "character": 30
                                          },
                                          {
                                            "line": 1165,
                                            "character": 42
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 53
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1169>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 54
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Read(src/embeddings/vector_stack/vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1168,
                                            "character": 22
                                          },
                                          {
                                            "line": 1168,
                                            "character": 34
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 54
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1169>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 55
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Read(src/embeddings/vector_stack/vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1168,
                                            "character": 35
                                          },
                                          {
                                            "line": 1168,
                                            "character": 47
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 55
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1172>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 56
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Read(validation/extract_vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1171,
                                            "character": 26
                                          },
                                          {
                                            "line": 1171,
                                            "character": 38
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 56
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1191>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 57
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  1. vector_stack.py - MATHEMATICALLY COMPLETE",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1190,
                                            "character": 5
                                          },
                                          {
                                            "line": 1190,
                                            "character": 17
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 57
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1206>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 58
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  2. extract_vector_stack.py - VALIDATION-FIRST EXCELLENCE",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1205,
                                            "character": 13
                                          },
                                          {
                                            "line": 1205,
                                            "character": 25
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 58
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1277>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 59
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  # validation/create_vector_stack_manifests.py",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1276,
                                            "character": 22
                                          },
                                          {
                                            "line": 1276,
                                            "character": 34
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 59
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_QiFykSmFYQfljs2z0HQY2b4X__vscode-1754745970683": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "File: `",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "`. Lines ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "1",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " to ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "350",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " (",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "502",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " lines total): ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "\n",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 352,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 352
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 351,
                                  "text": "\"\"\"Deterministic vector stack feature construction for persistence diagrams.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 351
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 350,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 350
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 349,
                                  "text": "Implements multiple stable topological liftings combined into a single\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 349
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 348,
                                  "text": "feature vector per sample (window). Only genuine topological transforms\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 348
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 347,
                                  "text": "are used. No statistical proxy features (means, std, etc.).\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 347
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 346,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 346
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 345,
                                  "text": "Blocks included:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 345
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 344,
                                  "text": " 1. Persistence Landscapes (multi-resolution, levels L)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 344
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 343,
                                  "text": " 2. Persistence Images (multi-scale grids, adaptive sigma)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 343
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 342,
                                  "text": " 3. Betti Curves (sampled counts over filtration)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 342
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 341,
                                  "text": " 4. Sliced Wasserstein Projections (fixed angle set)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 341
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 340,
                                  "text": " 5. Static Kernel Dictionary Responses (multi-scale Gaussian dictionaries)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 340
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 339,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 339
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 338,
                                  "text": "Silhouettes intentionally deferred for initial evaluation.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 338
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 337,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 337
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 336,
                                  "text": "All computations are dimension-wise (H0, H1) and concatenated in a fixed\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 336
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 335,
                                  "text": "block order recorded in the manifest for reproducibility & ablation.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 335
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 334,
                                  "text": "\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 334
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 333,
                                  "text": "from __future__ import annotations\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 333
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 332,
                                  "text": "from dataclasses import dataclass, asdict\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 332
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 331,
                                  "text": "from typing import Dict, List, Tuple, Sequence, Any, Optional\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 331
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 330,
                                  "text": "import numpy as np\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 330
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 329,
                                  "text": "import math\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 329
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 328,
                                  "text": "import json\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 328
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 327,
                                  "text": "import hashlib\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 327
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 326,
                                  "text": "from pathlib import Path\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 326
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 325,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 325
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 324,
                                  "text": "# Optional: SciPy for KD-tree nearest neighbor for sigma estimation (fallback pure numpy if absent)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 324
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 323,
                                  "text": "try:  # optional dependency\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 323
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 322,
                                  "text": "    from scipy import spatial as _scipy_spatial  # type: ignore\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 322
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 321,
                                  "text": "    _HAS_SCIPY = hasattr(_scipy_spatial, 'cKDTree')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 321
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 320,
                                  "text": "except Exception:  # pragma: no cover\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 320
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 319,
                                  "text": "    _HAS_SCIPY = False\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 319
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 318,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 318
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 317,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 317
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 316,
                                  "text": "@dataclass\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 316
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 315,
                                  "text": "class VectorStackConfig:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 315
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 314,
                                  "text": "    homology_dims: Sequence[int] = (0, 1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 314
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 313,
                                  "text": "    landscape_levels: int = 3\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 313
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 312,
                                  "text": "    landscape_resolutions: Sequence[int] = (100, 300)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 312
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 311,
                                  "text": "    image_grids: Sequence[Tuple[int, int]] = ((16, 16), (32, 32))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 311
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 310,
                                  "text": "    betti_resolution: int = 300\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 310
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 309,
                                  "text": "    sw_num_angles: int = 32\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 309
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 308,
                                  "text": "    sw_resolution: int = 300\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 308
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 307,
                                  "text": "    kernel_small_k: int = 32\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 307
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 306,
                                  "text": "    kernel_large_k: int = 32\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 306
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 305,
                                  "text": "    kernel_sample_small: int = 10000\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 305
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 304,
                                  "text": "    kernel_sample_large: int = 20000\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 304
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 303,
                                  "text": "    random_seed: int = 1337\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 303
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 302,
                                  "text": "    max_points_per_block: int = 5000  # downsample cap (except Betti curves)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 302
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 301,
                                  "text": "    intensity_normalize_images: bool = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 301
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 300,
                                  "text": "    clamp_sigma_min: float = 1e-3\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 300
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 299,
                                  "text": "    clamp_sigma_max_factor: float = 0.2  # fraction of (birth_range + life_range)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 299
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 298,
                                  "text": "    use_log_lifetime_images: bool = False\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 298
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 297,
                                  "text": "    # New enable flags for ablations\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 297
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 296,
                                  "text": "    enable_landscapes: bool = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 296
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 295,
                                  "text": "    enable_images: bool = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 295
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 294,
                                  "text": "    enable_betti: bool = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 294
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 293,
                                  "text": "    enable_sw: bool = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 293
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 292,
                                  "text": "    enable_kernels: bool = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 292
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 291,
                                  "text": "    # New optional future block (silhouettes scaffold) - not yet implemented\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 291
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 290,
                                  "text": "    enable_silhouettes: bool = False  # placeholder (Task 20 automation)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 290
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 289,
                                  "text": "    # Verbosity / progress tracking\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 289
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 288,
                                  "text": "    verbose: bool = False\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 288
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 287,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 287
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 286,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 286
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 285,
                                  "text": "# ----------------------- Utility & Determinism ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 285
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 284,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 284
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 283,
                                  "text": "def _set_rng(seed: int):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 283
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 282,
                                  "text": "    np.random.seed(seed)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 282
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 281,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 281
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 280,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 280
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 279,
                                  "text": "def _log(msg: str, cfg: Optional[VectorStackConfig]):  # lightweight logger\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 279
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 278,
                                  "text": "    if cfg is not None and getattr(cfg, 'verbose', False):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 278
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 277,
                                  "text": "        print(f\"[VectorStack] {msg}\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 277
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 276,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 276
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 275,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 275
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 274,
                                  "text": "def _hash_manifest(items: Sequence[str]) -> str:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 274
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 273,
                                  "text": "    h = hashlib.sha256()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 273
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 272,
                                  "text": "    for s in items:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 272
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 271,
                                  "text": "        h.update(s.encode('utf-8'))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 271
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 270,
                                  "text": "    return h.hexdigest()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 270
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 269,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 269
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 268,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 268
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 267,
                                  "text": "# ----------------------- Diagram Preprocessing ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 267
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 266,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 266
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 265,
                                  "text": "def _sanitize_diagram(dgm: np.ndarray) -> np.ndarray:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 265
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 264,
                                  "text": "    if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 264
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 263,
                                  "text": "        return dgm.reshape(0, 2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 263
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 262,
                                  "text": "    if dgm.shape[1] != 2:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 262
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 261,
                                  "text": "        raise ValueError(\"Diagram must have shape (n,2)\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 261
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 260,
                                  "text": "    mask = np.isfinite(dgm).all(axis=1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 260
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 259,
                                  "text": "    dgm = dgm[mask]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 259
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 258,
                                  "text": "    # Remove death < birth anomalies\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 258
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 257,
                                  "text": "    mask2 = dgm[:, 1] >= dgm[:, 0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 257
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 256,
                                  "text": "    return dgm[mask2]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 256
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 255,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 255
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 254,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 254
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 253,
                                  "text": "def _diagram_to_birth_lifetime(dgm: np.ndarray) -> np.ndarray:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 253
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 252,
                                  "text": "    if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 252
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 251,
                                  "text": "        return dgm.reshape(0, 2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 251
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 250,
                                  "text": "    life = np.maximum(0.0, dgm[:, 1] - dgm[:, 0])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 250
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 249,
                                  "text": "    return np.column_stack([dgm[:, 0], life])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 249
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 248,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 248
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 247,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 247
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 246,
                                  "text": "# ----------------------- Block: Persistence Landscapes ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 246
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 245,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 245
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 244,
                                  "text": "def _compute_landscapes(dgm: np.ndarray, levels: int, resolutions: Sequence[int]) -> Dict[str, np.ndarray]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 244
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 243,
                                  "text": "    out: Dict[str, np.ndarray] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 243
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 242,
                                  "text": "    if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 242
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 241,
                                  "text": "        for r in resolutions:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 241
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 240,
                                  "text": "            out[f\"landscape_r{r}\"] = np.zeros((levels, r), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 240
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 239,
                                  "text": "        return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 239
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 238,
                                  "text": "    finite = dgm[np.isfinite(dgm[:, 1])]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 238
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 237,
                                  "text": "    if finite.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 237
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 236,
                                  "text": "        for r in resolutions:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 236
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 235,
                                  "text": "            out[f\"landscape_r{r}\"] = np.zeros((levels, r), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 235
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 234,
                                  "text": "        return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 234
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 233,
                                  "text": "    births = finite[:, 0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 233
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 232,
                                  "text": "    deaths = finite[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 232
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 231,
                                  "text": "    min_b = births.min()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 231
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 230,
                                  "text": "    max_d = deaths.max()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 230
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 229,
                                  "text": "    if max_d <= min_b:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 229
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 228,
                                  "text": "        max_d = min_b + 1e-6\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 228
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 227,
                                  "text": "    for r in resolutions:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 227
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 226,
                                  "text": "        grid = np.linspace(min_b, max_d, r)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 226
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 225,
                                  "text": "        # For each grid point compute triangle heights, then take kth largest per level\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 225
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 224,
                                  "text": "        triangles = []  # list per point of values along grid\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 224
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 223,
                                  "text": "        # More efficient vectorization: compute all contributions\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 223
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 222,
                                  "text": "        # For each point define lambda(t)=max(0, min(t-b, d-t)) for t in [b,d]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 222
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 221,
                                  "text": "        values = np.zeros((finite.shape[0], r), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 221
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 220,
                                  "text": "        for i, (b, d) in enumerate(finite):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 220
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 219,
                                  "text": "            mask = (grid >= b) & (grid <= d)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 219
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 218,
                                  "text": "            if not mask.any():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 218
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 217,
                                  "text": "                continue\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 217
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 216,
                                  "text": "            t_segment = grid[mask]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 216
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 215,
                                  "text": "            vals = np.minimum(t_segment - b, d - t_segment)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 215
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 214,
                                  "text": "            values[i, mask] = vals\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 214
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 213,
                                  "text": "        # Now for each level k take kth order statistic across points at each grid location\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 213
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 212,
                                  "text": "        lvl_stack = np.zeros((levels, r), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 212
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 211,
                                  "text": "        # Sort descending along axis 0 per column (points) - use partial sort for efficiency if needed\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 211
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 210,
                                  "text": "        # Simpler: we gather non-zero contributions per column\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 210
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 209,
                                  "text": "        for j in range(r):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 209
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 208,
                                  "text": "            col = values[:, j]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 208
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 207,
                                  "text": "            nz = col[col > 0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 207
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 206,
                                  "text": "            if nz.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 206
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 205,
                                  "text": "                continue\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 205
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 204,
                                  "text": "            nz_sorted = np.sort(nz)[::-1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 204
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 203,
                                  "text": "            upto = min(levels, nz_sorted.size)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 203
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 202,
                                  "text": "            lvl_stack[:upto, j] = nz_sorted[:upto]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 202
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 201,
                                  "text": "        out[f\"landscape_r{r}\"] = lvl_stack\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 201
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 200,
                                  "text": "    return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 200
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 199,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 199
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 198,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 198
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 197,
                                  "text": "# ----------------------- Block: Persistence Images ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 197
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 196,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 196
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 195,
                                  "text": "def _adaptive_sigma(birth_life: np.ndarray, clamp_min: float, clamp_max: float) -> float:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 195
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 194,
                                  "text": "    if birth_life.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 194
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 193,
                                  "text": "        return clamp_min\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 193
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 192,
                                  "text": "    life = birth_life[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 192
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 191,
                                  "text": "    finite = life[np.isfinite(life)]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 191
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 190,
                                  "text": "    if finite.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 190
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 189,
                                  "text": "        return clamp_min\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 189
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 188,
                                  "text": "    med = np.median(finite)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 188
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 187,
                                  "text": "    sigma = 0.5 * med\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 187
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 186,
                                  "text": "    sigma = max(clamp_min, min(sigma, clamp_max))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 186
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 185,
                                  "text": "    return float(sigma)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 185
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 184,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 184
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 183,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 183
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 182,
                                  "text": "def _compute_persistence_images(dgm: np.ndarray, grids: Sequence[Tuple[int, int]], cfg: VectorStackConfig,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 182
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 181,
                                  "text": "                                birth_range: Tuple[float, float], life_range: Tuple[float, float]) -> Dict[str, np.ndarray]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 181
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 180,
                                  "text": "    out: Dict[str, np.ndarray] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 180
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 179,
                                  "text": "    if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 179
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 178,
                                  "text": "        for (gx, gy) in grids:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 178
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 177,
                                  "text": "            out[f\"pimg_{gx}x{gy}\"] = np.zeros((gx, gy), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 177
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 176,
                                  "text": "        return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 176
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 175,
                                  "text": "    bl = _diagram_to_birth_lifetime(dgm)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 175
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 174,
                                  "text": "    if cfg.use_log_lifetime_images:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 174
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 173,
                                  "text": "        bl[:, 1] = np.log1p(bl[:, 1])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 173
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 172,
                                  "text": "    bmin, bmax = birth_range\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 172
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 171,
                                  "text": "    lmin, lmax = life_range\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 171
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 170,
                                  "text": "    if bmax <= bmin:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 170
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 169,
                                  "text": "        bmax = bmin + 1e-6\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 169
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 168,
                                  "text": "    if lmax <= lmin:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 168
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 167,
                                  "text": "        lmax = lmin + 1e-6\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 167
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 166,
                                  "text": "    clamp_max_sigma = cfg.clamp_sigma_max_factor * ((bmax - bmin) + (lmax - lmin))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 166
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 165,
                                  "text": "    sigma = _adaptive_sigma(bl, cfg.clamp_sigma_min, clamp_max_sigma)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 165
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 164,
                                  "text": "    for (gx, gy) in grids:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 164
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 163,
                                  "text": "        img = np.zeros((gx, gy), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 163
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 162,
                                  "text": "        # Grid edges\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 162
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 161,
                                  "text": "        xs = np.linspace(bmin, bmax, gx)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 161
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 160,
                                  "text": "        ys = np.linspace(lmin, lmax, gy)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 160
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 159,
                                  "text": "        # Precompute gaussian normalization 1/(2*pi*sigma^2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 159
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 158,
                                  "text": "        inv = 1.0 / (2.0 * sigma * sigma)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 158
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 157,
                                  "text": "        for (b, l) in bl:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 157
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 156,
                                  "text": "            # Evaluate contribution on grid (vectorized per point)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 156
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 155,
                                  "text": "            dx2 = (xs - b) ** 2\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 155
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "            dy2 = (ys - l) ** 2\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 153,
                                  "text": "            # outer add via broadcasting\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 153
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 152,
                                  "text": "            contrib = np.exp(-(dx2[:, None] + dy2[None, :]) * inv)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 152
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 151,
                                  "text": "            img += contrib\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 151
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "        if cfg.intensity_normalize_images and img.sum() > 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "            img = img / img.sum()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "        out[f\"pimg_{gx}x{gy}\"] = img\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "    return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "# ----------------------- Block: Betti Curves ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "def _compute_betti_curve(dgm: np.ndarray, resolution: int) -> np.ndarray:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "    if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "        return np.zeros(resolution, dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "    finite = dgm[np.isfinite(dgm[:, 1])]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "    if finite.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "        return np.zeros(resolution, dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "    births = finite[:, 0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "    deaths = finite[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "    min_b = births.min()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "    max_d = deaths.max()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "    if max_d <= min_b:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "        max_d = min_b + 1e-6\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "    grid = np.linspace(min_b, max_d, resolution)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "    counts = np.zeros(resolution, dtype=int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "    # Sweep-line style: for each point add interval\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "    for (b, d) in finite:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "        mask = (grid >= b) & (grid <= d)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "        counts[mask] += 1\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "    return counts.astype(float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "# ----------------------- Block: Sliced Wasserstein Projections ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "def _generate_angles(m: int) -> np.ndarray:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "    # Golden angle sequence for deterministic coverage\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "    angles = np.zeros(m, dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "    golden = math.pi * (3 - math.sqrt(5))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "    for i in range(m):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "        angles[i] = (i * golden) % (2 * math.pi)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "    return angles\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "def _compute_sliced_wasserstein(dgm: np.ndarray, num_angles: int, resolution: int) -> Dict[str, np.ndarray]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "    out: Dict[str, np.ndarray] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "    if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "        out['sw'] = np.zeros((num_angles, resolution), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "        return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "    finite = dgm[np.isfinite(dgm[:, 1])]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "    if finite.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "        out['sw'] = np.zeros((num_angles, resolution), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "        return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "    births = finite[:, 0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "    deaths = finite[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "    min_b = births.min()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "    max_d = deaths.max()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "    if max_d <= min_b:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "        max_d = min_b + 1e-6\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "    grid = np.linspace(min_b, max_d, resolution)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "    angles = _generate_angles(num_angles)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "    proj_stack = np.zeros((num_angles, resolution), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "    pts = finite\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "    for ai, ang in enumerate(angles):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "        c = math.cos(ang)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "        s = math.sin(ang)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "        proj = pts @ np.array([[c, 0.0], [0.0, s]])  # birth*c, death*s\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "        # collapse to 1D signature: project births and deaths separately then combine by sorting\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "        v = np.sort(np.concatenate([proj[:, 0], proj[:, 1]]))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "        if v.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "            continue\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "        # Interpolate histogram-like curve over grid\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "        # Map v range to grid range\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "        vmin, vmax = v[0], v[-1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "        if vmax <= vmin:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "            vmax = vmin + 1e-6\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "        # compute CDF style curve\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "        counts = np.searchsorted(v, grid, side='right') / v.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "        proj_stack[ai] = counts\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "    out['sw'] = proj_stack\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "    return out\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "# ----------------------- Block: Kernel Dictionary Responses ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "def _sample_points(diagrams: List[np.ndarray], total: int) -> np.ndarray:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "    collected = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "    for dgm in diagrams:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "        if dgm.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "            continue\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "        pts = _diagram_to_birth_lifetime(_sanitize_diagram(dgm))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "        collected.append(pts)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "    if not collected:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "        return np.zeros((0, 2), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "    all_pts = np.vstack(collected)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "    if all_pts.shape[0] <= total:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "        return all_pts\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "    idx = np.random.choice(all_pts.shape[0], size=total, replace=False)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "    return all_pts[idx]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "def _estimate_sigma_from_points(pts: np.ndarray, k: int = 8) -> float:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "    if pts.shape[0] < 2:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "        return 0.1\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "    if _HAS_SCIPY and pts.shape[0] >= k:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "        tree = _scipy_spatial.cKDTree(pts)  # type: ignore[attr-defined]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "        dists, _ = tree.query(pts, k=k)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "        # dists shape (n,k); ignore self-distance at col0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "        vals = dists[:, 1:].reshape(-1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "        vals = vals[np.isfinite(vals) & (vals > 0)]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "        if vals.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "            return 0.1\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "        return float(np.median(vals))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "    # Fallback: pairwise subset\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "    n = pts.shape[0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "    take = min(n, 500)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "    idx = np.random.choice(n, take, replace=False)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "    sub = pts[idx]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "    d2 = ((sub[None, :, :] - sub[:, None, :]) ** 2).sum(axis=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "    d2 = d2[np.triu_indices(sub.shape[0], k=1)]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "    d = np.sqrt(np.maximum(d2, 0))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "    d = d[np.isfinite(d) & (d > 0)]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "    if d.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "        return 0.1\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "    return float(np.median(d))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "def prepare_kernel_dictionaries(train_diagrams_by_dim: Dict[int, List[np.ndarray]], cfg: VectorStackConfig,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "                                 out_path: Optional[Path] = None) -> Dict[str, Any]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "    _set_rng(cfg.random_seed)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "    dicts: Dict[str, Any] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "    _log(\"Preparing kernel dictionaries\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "    for scale_name, k, sample_n in [\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "        (\"small\", cfg.kernel_small_k, cfg.kernel_sample_small),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "        (\"large\", cfg.kernel_large_k, cfg.kernel_sample_large),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "    ]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "        diagrams = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "        for dim in cfg.homology_dims:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "            diagrams.extend(train_diagrams_by_dim.get(dim, []))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "        _log(f\"Sampling up to {sample_n} points for '{scale_name}' scale\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "        pts = _sample_points(diagrams, sample_n)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "        if pts.shape[0] == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "            centers = np.zeros((k, 2), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "            sigma_base = 0.1\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "            _log(f\"No points available for '{scale_name}', creating zero centers\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "        else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "            centers = np.zeros((k, 2), dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "            # k-means++ deterministic\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "            # pick first center\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "            idx0 = np.random.randint(0, pts.shape[0])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "            centers[0] = pts[idx0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "            # distances\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "            d2 = ((pts - centers[0]) ** 2).sum(axis=1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 352,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 352
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_3MyK1ostKqWszd8B3R127y22__vscode-1754745970684": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/src/embeddings/vector_stack/vector_stack.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 153,
                                  "text": "            for i in range(1, k):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 153
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 152,
                                  "text": "                probs = d2 / d2.sum() if d2.sum() > 0 else np.ones_like(d2) / d2.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 152
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 151,
                                  "text": "                c_idx = np.random.choice(pts.shape[0], p=probs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 151
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "                centers[i] = pts[c_idx]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "                new_d2 = ((pts - centers[i]) ** 2).sum(axis=1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "                d2 = np.minimum(d2, new_d2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "            sigma_base = _estimate_sigma_from_points(pts)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "            _log(f\"Built {k} centers for '{scale_name}' (sigma_base≈{sigma_base:.4f})\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "        dicts[f\"kernel_{scale_name}\"] = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "            'centers': centers,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "            'sigma_base': sigma_base,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "        }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "    if out_path is not None:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "        _log(f\"Persisting kernel dictionaries to {out_path}\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "        out_path.parent.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "        np.savez_compressed(out_path, **{k: v['centers'] for k, v in dicts.items()})\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "        with open(out_path.with_suffix('.json'), 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "            json.dump({k: {'sigma_base': v['sigma_base']} for k, v in dicts.items()}, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "    _log(\"Kernel dictionaries ready\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "    return dicts\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "def _kernel_responses(dgm: np.ndarray, centers: np.ndarray, sigma: float, max_points: int) -> np.ndarray:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "    if dgm.size == 0 or centers.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "        return np.zeros(centers.shape[0], dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "    pts = _diagram_to_birth_lifetime(_sanitize_diagram(dgm))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "    if pts.shape[0] > max_points:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "        idx = np.random.choice(pts.shape[0], max_points, replace=False)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "        pts = pts[idx]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "    # Compute gaussian responses\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "    # (n,2) vs (k,2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "    diff = pts[:, None, :] - centers[None, :, :]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "    d2 = (diff ** 2).sum(axis=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "    sigma2 = (sigma ** 2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "    vals = np.exp(-d2 / (2 * sigma2))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "    # Average pooling for scale invariance w.r.t number of points\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "    resp = vals.mean(axis=0)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "    return resp\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "# ----------------------- Complete Block Feature Assembly ----------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "def compute_block_features(diagrams_by_dim: Dict[int, np.ndarray], cfg: VectorStackConfig,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "                           kernel_dicts: Dict[str, Any]) -> Tuple[Dict[str, np.ndarray], Dict[str, Tuple[int, int]]]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "    blocks: Dict[str, np.ndarray] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "    spans: Dict[str, Tuple[int, int]] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "    cursor = 0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "    _log(\"Beginning block feature assembly\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "    for dim in cfg.homology_dims:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "        dgm = _sanitize_diagram(diagrams_by_dim.get(dim, np.zeros((0, 2), dtype=float)))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "        _log(f\"Dim H{dim}: {dgm.shape[0]} points\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "        # Landscapes\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "        if cfg.enable_landscapes:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "            lans = _compute_landscapes(dgm, cfg.landscape_levels, cfg.landscape_resolutions)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "            for name, arr in lans.items():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "                flat = arr.reshape(-1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "                key = f\"H{dim}_{name}\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "                blocks[key] = flat\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "                spans[key] = (cursor, cursor + flat.size)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "                cursor += flat.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "                _log(f\"Added {key} size={flat.size} (cursor={cursor})\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "        # Persistence Images\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "        if cfg.enable_images:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "            finite = dgm[np.isfinite(dgm[:, 1])] if dgm.size > 0 else dgm\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "            if finite.size > 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "                births = finite[:, 0]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "                deaths = finite[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "                birth_range = (births.min(), births.max())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "                life_vals = np.maximum(0.0, deaths - births)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "                life_range = (life_vals.min(), life_vals.max())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "            else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "                birth_range = (0.0, 1.0)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "                life_range = (0.0, 1.0)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "            pimgs = _compute_persistence_images(dgm, cfg.image_grids, cfg, birth_range, life_range)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "            for name, arr in pimgs.items():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "                flat = arr.reshape(-1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "                key = f\"H{dim}_{name}\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "                blocks[key] = flat\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "                spans[key] = (cursor, cursor + flat.size)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "                cursor += flat.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "                _log(f\"Added {key} size={flat.size} (cursor={cursor})\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "        # Betti curve\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "        if cfg.enable_betti:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "            betti = _compute_betti_curve(dgm, cfg.betti_resolution)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "            key_betti = f\"H{dim}_betti\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "            blocks[key_betti] = betti\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "            spans[key_betti] = (cursor, cursor + betti.size)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "            cursor += betti.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "            _log(f\"Added {key_betti} size={betti.size} (cursor={cursor})\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "        # SW projections\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "        if cfg.enable_sw:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "            sw = _compute_sliced_wasserstein(dgm, cfg.sw_num_angles, cfg.sw_resolution)['sw']\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "            key_sw = f\"H{dim}_sw\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "            blocks[key_sw] = sw.reshape(-1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "            spans[key_sw] = (cursor, cursor + sw.size)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "            cursor += sw.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "            _log(f\"Added {key_sw} size={sw.size} (cursor={cursor})\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "        # Optional silhouettes (not implemented yet)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "        if getattr(cfg, 'enable_silhouettes', False):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "            _log(\"Silhouette block requested but not yet implemented; skipping (placeholder)\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "        # Kernel dictionaries\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "        if cfg.enable_kernels:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "            for scale in [\"kernel_small\", \"kernel_large\"]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "                centers = kernel_dicts[scale]['centers']\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "                sigma_base = kernel_dicts[scale]['sigma_base']\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "                resp = _kernel_responses(dgm, centers, sigma_base, cfg.max_points_per_block)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "                key_k = f\"H{dim}_{scale}\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "                blocks[key_k] = resp\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "                spans[key_k] = (cursor, cursor + resp.size)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "                cursor += resp.size\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "                _log(f\"Added {key_k} size={resp.size} (cursor={cursor})\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "    _log(f\"Completed assembly. Total feature length={cursor}\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "    return blocks, spans\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "def stack_and_normalize(blocks: Dict[str, np.ndarray], spans: Dict[str, Tuple[int, int]],\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "                        norm_stats: Optional[Dict[str, Dict[str, float]]] = None,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "                        fit: bool = False, cfg: Optional[VectorStackConfig] = None) -> Tuple[np.ndarray, Dict[str, Dict[str, float]]]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "    # Compute / apply per-block z-score using train-only stats\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "    updated_stats: Dict[str, Dict[str, float]] = {} if fit else (norm_stats or {})\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "    vector_parts = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "    for key, arr in blocks.items():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "        if fit:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "            mean = float(arr.mean()) if arr.size > 0 else 0.0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "            std = float(arr.std()) if arr.std() > 0 else 1.0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "            updated_stats[key] = {'mean': mean, 'std': std}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "            _log(f\"Fit norm stats for {key}: mean={mean:.4e} std={std:.4e}\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "        stats = updated_stats[key]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "        std = stats['std'] if stats['std'] > 0 else 1.0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "        normed = (arr - stats['mean']) / std\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "        vector_parts.append(normed)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "    flat = np.concatenate(vector_parts) if vector_parts else np.zeros(0, dtype=float)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "    _log(f\"Stacked vector length={flat.size}\", cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "    return flat, updated_stats\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "def build_vector_stack(diagrams_by_dim: Dict[int, np.ndarray], cfg: VectorStackConfig,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "                       kernel_dicts: Dict[str, Any], norm_stats: Optional[Dict[str, Dict[str, float]]] = None,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "                       fit_norm: bool = False) -> Tuple[np.ndarray, Dict[str, Dict[str, float]], Dict[str, Tuple[int, int]]]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "    blocks, spans = compute_block_features(diagrams_by_dim, cfg, kernel_dicts)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "    vec, stats = stack_and_normalize(blocks, spans, norm_stats, fit=fit_norm, cfg=cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "    return vec, stats, spans\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "__all__ = [\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "    'VectorStackConfig',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "    'prepare_kernel_dictionaries',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "    'compute_block_features',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "    'stack_and_normalize',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "    'build_vector_stack',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_KXFDMJ3qzeg30cPh1D6QIzgi__vscode-1754745970685": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 21,
                  "value": "ERROR: Your input to the tool was invalid (must have required property 'isRegexp')\nPlease check your input and try again."
                }
              ]
            },
            "call_mmh5ROmuZep9kiHU6gnSRXJd__vscode-1754745970686": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "PFe",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 20,
                              "text": "7 matches",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {
                            "priority": 20
                          },
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=5>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 241
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": " 1. Experiment orchestrator (this script)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 4,
                                            "character": 15
                                          },
                                          {
                                            "line": 4,
                                            "character": 27
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 241
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=261>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 242
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "        print(f\"[orchestrator] Snapshot {snapshot_id} already executed — skipping. Use --force to re-run.\")",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 260,
                                            "character": 17
                                          },
                                          {
                                            "line": 260,
                                            "character": 29
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 242
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=280>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 243
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    (run_dir / 'raw_output' / 'orchestrator_stdout.log').write_text(proc.stdout)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 279,
                                            "character": 31
                                          },
                                          {
                                            "line": 279,
                                            "character": 43
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 243
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=281>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 244
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    (run_dir / 'raw_output' / 'orchestrator_stderr.log').write_text(proc.stderr)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 280,
                                            "character": 31
                                          },
                                          {
                                            "line": 280,
                                            "character": 43
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 244
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=291>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 245
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "        print('[orchestrator] Could not locate new vector_stack_outputs directory; aborting artifact harvest.')",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 290,
                                            "character": 16
                                          },
                                          {
                                            "line": 290,
                                            "character": 28
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 245
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=304>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 246
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "        print('[orchestrator] metrics.json missing — run failed.')",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 303,
                                            "character": 16
                                          },
                                          {
                                            "line": 303,
                                            "character": 28
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 246
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py\" line=382>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 247
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    save_json(run_dir / 'results' / 'orchestrator_summary.json', summary)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 381,
                                            "character": 37
                                          },
                                          {
                                            "line": 381,
                                            "character": 49
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 247
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_WPoxwPOcBulxIXPdTuBqylTO__vscode-1754745970687": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "File: `",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "`. Lines ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "1",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " to ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "250",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " (",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "404",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " lines total): ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "\n",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 252,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 252
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 251,
                                  "text": "#!/usr/bin/env python3\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 251
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 250,
                                  "text": "\"\"\"Unified experiment orchestration for deterministic vector stack TDA experiments.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 250
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 249,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 249
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 248,
                                  "text": "Implements automation items 1–20 (initial functional version):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 248
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 247,
                                  "text": " 1. Experiment orchestrator (this script)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 247
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 246,
                                  "text": " 2. Config snapshot & hashing\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 246
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 245,
                                  "text": " 3. Topology integrity validator (lightweight)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 245
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 244,
                                  "text": " 4. Baseline gate (PR-AUC comparison)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 244
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 243,
                                  "text": " 5. Failure classifier & logging\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 243
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 242,
                                  "text": " 6. Ablation scheduling passthrough (uses underlying extract script)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 242
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 241,
                                  "text": " 7. Sparse feature pruner (optional secondary pass with L1 LR)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 241
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 240,
                                  "text": " 8. Threshold optimization (constraint recall >= target)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 240
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 239,
                                  "text": " 9. Multi-run aggregator (delegates to extract script already; additional summarization)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 239
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 238,
                                  "text": "10. Artifact completeness checker\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 238
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 237,
                                  "text": "11. Repro script generator\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 237
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 236,
                                  "text": "12. GPU capability probe\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 236
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 235,
                                  "text": "13. Metric trend dashboard (HTML stub generation)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 235
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 234,
                                  "text": "14. Automatic Codacy scan hook (touch marker file to signal external process; real scan triggered by agent rules)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 234
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 233,
                                  "text": "15. Change impact diff (against last successful vector stack run)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 233
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 232,
                                  "text": "16. Experiment registry index\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 232
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 231,
                                  "text": "17. Data drift monitor (timestamps + label balance only — no statistical proxies)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 231
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 230,
                                  "text": "18. Time/resource logging (wall & peak RSS)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 230
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 229,
                                  "text": "19. Auto cleanup policy (prune old non-top runs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 229
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 228,
                                  "text": "20. Silhouette block toggle scaffold (placeholder flag audit)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 228
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 227,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 227
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 226,
                                  "text": "NOTE: Heavy computations (full feature extraction) delegated to validation/extract_vector_stack.py\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 226
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 225,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 225
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 224,
                                  "text": "This script is intentionally lightweight and compliant with UNIFIED_AGENT_INSTRUCTIONS.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 224
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 223,
                                  "text": "\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 223
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 222,
                                  "text": "from __future__ import annotations\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 222
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 221,
                                  "text": "import argparse\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 221
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 220,
                                  "text": "import hashlib\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 220
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 219,
                                  "text": "import json\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 219
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 218,
                                  "text": "import os\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 218
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 217,
                                  "text": "import shutil\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 217
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 216,
                                  "text": "import subprocess\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 216
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 215,
                                  "text": "import sys\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 215
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 214,
                                  "text": "import textwrap\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 214
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 213,
                                  "text": "import time\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 213
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 212,
                                  "text": "from datetime import datetime\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 212
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 211,
                                  "text": "from pathlib import Path\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 211
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 210,
                                  "text": "from typing import Dict, Any, List, Optional\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 210
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 209,
                                  "text": "import glob\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 209
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 208,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 208
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 207,
                                  "text": "ROOT = Path(__file__).resolve().parents[1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 207
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 206,
                                  "text": "VALIDATION_DIR = ROOT / 'validation'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 206
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 205,
                                  "text": "EXTRACT_SCRIPT = VALIDATION_DIR / 'extract_vector_stack.py'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 205
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 204,
                                  "text": "REGISTRY_PATH = VALIDATION_DIR / 'experiment_registry.json'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 204
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 203,
                                  "text": "VECTOR_STACK_PATH = ROOT / 'src' / 'embeddings' / 'vector_stack' / 'vector_stack.py'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 203
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 202,
                                  "text": "RUN_BASE = VALIDATION_DIR / 'vector_stack_experiments'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 202
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 201,
                                  "text": "DASHBOARD_HTML = VALIDATION_DIR / 'vector_stack_dashboard.html'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 201
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 200,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 200
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 199,
                                  "text": "REQUIRED_ARTIFACTS = [\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 199
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 198,
                                  "text": "    'results/metrics.json',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 198
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 197,
                                  "text": "    'results/metrics_with_flags.json',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 197
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 196,
                                  "text": "    'results/mandatory_metrics.json',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 196
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 195,
                                  "text": "    'plots/precision_recall_curve.png',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 195
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 194,
                                  "text": "    'plots/roc_curve.png',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 194
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 193,
                                  "text": "    'plots/reliability_curve.png',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 193
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 192,
                                  "text": "    'plots/confusion_matrix.png',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 192
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 191,
                                  "text": "    'raw_output/classification_report.txt',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 191
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 190,
                                  "text": "]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 190
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 189,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 189
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 188,
                                  "text": "FAILURE_LOG = VALIDATION_DIR / 'FAILURE_LOG.md'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 188
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 187,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 187
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 186,
                                  "text": "# ----------------------------- Helpers ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 186
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 185,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 185
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 184,
                                  "text": "def sha256_file(path: Path) -> str:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 184
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 183,
                                  "text": "    h = hashlib.sha256()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 183
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 182,
                                  "text": "    with open(path, 'rb') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 182
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 181,
                                  "text": "        for chunk in iter(lambda: f.read(8192), b''):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 181
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 180,
                                  "text": "            h.update(chunk)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 180
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 179,
                                  "text": "    return h.hexdigest()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 179
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 178,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 178
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 177,
                                  "text": "def load_json(path: Path, default=None):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 177
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 176,
                                  "text": "    if path.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 176
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 175,
                                  "text": "        with open(path, 'r') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 175
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 174,
                                  "text": "            return json.load(f)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 174
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 173,
                                  "text": "    return default\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 173
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 172,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 172
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 171,
                                  "text": "def save_json(path: Path, obj: Any):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 171
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 170,
                                  "text": "    path.parent.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 170
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 169,
                                  "text": "    with open(path, 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 169
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 168,
                                  "text": "        json.dump(obj, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 168
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 167,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 167
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 166,
                                  "text": "# ----------------------------- Topology Integrity Validator ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 166
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 165,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 165
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 164,
                                  "text": "def validate_topology_integrity(config: Dict[str, Any]):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 164
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 163,
                                  "text": "    # Ensure only allowed blocks & no forbidden statistical proxy flags\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 163
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 162,
                                  "text": "    forbidden_keys = [k for k in config.keys() if 'mean' in k.lower() or 'std' in k.lower()]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 162
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 161,
                                  "text": "    if forbidden_keys:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 161
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 160,
                                  "text": "        raise ValueError(f\"Forbidden statistical-like keys present: {forbidden_keys}\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 160
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 159,
                                  "text": "    # Mandatory block ordering presence is implied via extract script; basic sanity\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 159
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 158,
                                  "text": "    for flag in ['enable_landscapes','enable_images','enable_betti','enable_sw','enable_kernels']:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 158
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 157,
                                  "text": "        if flag not in config:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 157
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 156,
                                  "text": "            # Non-fatal; we will mark but not block; script will supply defaults\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 156
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 155,
                                  "text": "            config.setdefault(flag, True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 155
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "    return True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 153,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 153
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 152,
                                  "text": "# ----------------------------- Registry Handling ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 152
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 151,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 151
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "def load_registry() -> Dict[str, Any]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "    return load_json(REGISTRY_PATH, default={}) or {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "def update_registry(registry: Dict[str, Any]):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "    save_json(REGISTRY_PATH, registry)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "# ----------------------------- Baseline & Failure Classification ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "def classify_run(pr_auc: float, baseline: float) -> str:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "    diff = pr_auc - baseline\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "    if diff >= 0:  # improvement or match\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "        return 'SUCCESS'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "    rel_drop = abs(diff) / baseline if baseline > 0 else 1.0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "    if rel_drop > 0.10:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "        return 'FAILURE'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "    if rel_drop > 0.05:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "        return 'WARNING'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "    return 'REGRESSION'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "# ----------------------------- Artifact Completeness ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "def check_artifacts(run_dir: Path) -> List[str]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "    missing = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "    for rel in REQUIRED_ARTIFACTS:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "        if not (run_dir / rel).exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "            missing.append(rel)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "    return missing\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "# ----------------------------- GPU Probe ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "def gpu_probe() -> Dict[str, Any]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "    info = {'available': False}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "    try:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "        import torch  # type: ignore\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "        info['available'] = torch.cuda.is_available()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "        if info['available']:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "            idx = torch.cuda.current_device()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "            info['device_name'] = torch.cuda.get_device_name(idx)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "            info['total_mem_gb'] = round(torch.cuda.get_device_properties(idx).total_memory / (1024**3), 2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "    except Exception:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "        info['available'] = False\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "    return info\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "# ----------------------------- Threshold Optimization ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "def optimize_threshold(metrics_json: Dict[str, Any], recall_target: float = 0.85):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "    # We rely on best_threshold already saved; placeholder for constraint variant\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "    # If best threshold recall < target, we keep best; real implementation would search stored prob arrays\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "    return {'selected_threshold': metrics_json.get('logistic_regression', {}).get('best_threshold'), 'recall_target': recall_target}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "# ----------------------------- Trend Dashboard ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "def build_dashboard(registry: Dict[str, Any]):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "    rows = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "    for run_id, meta in sorted(registry.items(), key=lambda x: x[1].get('timestamp','')):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "        pr = meta.get('pr_auc')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "        status = meta.get('status')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "        rows.append(f\"<tr><td>{run_id}</td><td>{meta.get('timestamp')}</td><td>{pr}</td><td>{status}</td><td>{meta.get('baseline')}</td></tr>\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "    html = f\"\"\"<html><head><title>Vector Stack Experiment Dashboard</title></head>\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "    <body><h1>Vector Stack Experiments</h1>\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "    <table border='1' cellpadding='4'>\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "    <tr><th>Run ID</th><th>Timestamp</th><th>PR-AUC</th><th>Status</th><th>Baseline</th></tr>\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "    {''.join(rows)}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "    </table></body></html>\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "    DASHBOARD_HTML.write_text(html)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "# ----------------------------- Change Impact Diff ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "def compute_diff(previous_path: Optional[Path], current_hash: str) -> str:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "    # For simplicity store last vector_stack.py hash; real diff already in VCS.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "    if previous_path and previous_path.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "        prev = previous_path.read_text().splitlines()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "        prev = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "    curr = VECTOR_STACK_PATH.read_text().splitlines()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "    # Simple line-by-line diff summary (counts)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "    added = sum(1 for l in curr if l not in prev)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "    removed = sum(1 for l in prev if l not in curr)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "    return f\"Added lines (naive count): {added}, Removed lines (naive count): {removed}, current_hash={current_hash}\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "# ----------------------------- Sparse Feature Pruner (Placeholder) ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "def sparse_feature_pruner(run_dir: Path) -> Dict[str, Any]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "    # Placeholder: would load coefficients if persisted. Return stub.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "    return {'feature_mask_size': None, 'pruned': False}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "# ----------------------------- Data Drift Monitor ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "def data_drift_monitor(run_dir: Path) -> Dict[str, Any]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "    # Use spans.json (if present) + y_train distribution\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "    spans_file = run_dir / 'data' / 'spans.json'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "    y_train_file = run_dir / 'data' / 'X_train.npz'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "    drift: Dict[str, Any] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "    if spans_file.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "        drift['spans_present'] = True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "    if y_train_file.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "        try:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "            import numpy as np  # local import\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "            dat = np.load(y_train_file)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "            y = dat['y']\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "            drift['attack_rate'] = float(y.mean())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "            drift['n_train'] = int(y.shape[0])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "        except Exception as e:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "            drift['error'] = str(e)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "    return drift\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "# ----------------------------- Auto Cleanup ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "def auto_cleanup(keep_success: int = 5):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "    if not RUN_BASE.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "        return\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "    runs = sorted([p for p in RUN_BASE.iterdir() if p.is_dir()], key=lambda p: p.name)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "    # Keep newest keep_success successes + all failures\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "    successes = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "    for r in runs:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "        meta_f = r / 'results' / 'metrics.json'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "        if meta_f.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "            successes.append(r)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "    if len(successes) <= keep_success:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "        return\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "    # Remove oldest extras (simple heuristic)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "    for r in successes[:-keep_success]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "        try:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "            shutil.rmtree(r)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "        except Exception:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "            pass\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "# ----------------------------- Main Orchestration ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "def run_experiment(args):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "    RUN_BASE.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "    ts = datetime.utcnow().strftime('%Y%m%d_%H%M%S')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "    run_dir = RUN_BASE / ts\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "    run_dir.mkdir()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "    # Config assembly\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "    config: Dict[str, Any] = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "        'sw_num_angles': args.sw_angles,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "        'lr_penalty': args.lr_penalty,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "        'lr_max_iter': args.lr_max_iter,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "        'svm_max_iter': args.svm_max_iter,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "        'baseline_pr_auc': args.baseline_pr,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "    validate_topology_integrity(config)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "    # Hash snapshot\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "    code_hash = sha256_file(VECTOR_STACK_PATH)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "    extract_hash = sha256_file(EXTRACT_SCRIPT)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "    snapshot = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 252,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 252
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_CUdAWCsxUKQXH0Rs2NqLx7Cb__vscode-1754745970688": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 156,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 156
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 155,
                                  "text": "        'vector_stack_hash': code_hash,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 155
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "        'extract_script_hash': extract_hash,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 153,
                                  "text": "        'config': config,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 153
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 152,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 152
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 151,
                                  "text": "    save_json(run_dir / 'snapshot.json', snapshot)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 151
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "    # Skip if hash & config already in registry\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "    registry = load_registry()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "    snapshot_id = hashlib.sha256(json.dumps(snapshot, sort_keys=True).encode()).hexdigest()[:16]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "    if not args.force and snapshot_id in registry:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "        print(f\"[orchestrator] Snapshot {snapshot_id} already executed — skipping. Use --force to re-run.\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "        return run_dir, registry\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "    # Execute underlying extract script from ROOT so auto-detect can find manifests\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "    existing_dirs = set()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "    vout_base = ROOT / 'validation' / 'vector_stack_outputs'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "    if vout_base.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "        existing_dirs = {p.name for p in vout_base.iterdir() if p.is_dir()}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "    cmd = [sys.executable, str(EXTRACT_SCRIPT), '--sw-angles', str(args.sw_angles), '--lr-penalty', args.lr_penalty,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "           '--lr-max-iter', str(args.lr_max_iter), '--svm-max-iter', str(args.svm_max_iter), '--baseline-pr', str(args.baseline_pr)]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "    if args.skip_ablations:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "        cmd.append('--skip-ablations')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "    if args.no_calibration:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "        cmd.append('--no-calibration')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "    start = time.time()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "    env = os.environ.copy()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "    proc = subprocess.run(cmd, cwd=ROOT, capture_output=True, text=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "    wall = time.time() - start\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "    (run_dir / 'raw_output').mkdir(exist_ok=True, parents=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "    (run_dir / 'raw_output' / 'orchestrator_stdout.log').write_text(proc.stdout)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "    (run_dir / 'raw_output' / 'orchestrator_stderr.log').write_text(proc.stderr)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "    # Locate new output directory\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "    new_dir = None\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "    if vout_base.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "        for p in vout_base.iterdir():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "            if p.is_dir() and p.name not in existing_dirs:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "                new_dir = p\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "                break\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "    if new_dir is None:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "        print('[orchestrator] Could not locate new vector_stack_outputs directory; aborting artifact harvest.')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "        # Copy selected subfolders into run_dir for standard layout\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "        for sub in ['results', 'plots', 'raw_output', 'data']:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "            src = new_dir / sub\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "            if src.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "                dest = run_dir / sub\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "                if dest.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "                    shutil.rmtree(dest)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "                shutil.copytree(src, dest)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "    metrics_path = run_dir / 'results' / 'metrics.json'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "    if not metrics_path.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "        print('[orchestrator] metrics.json missing — run failed.')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "        return run_dir, registry\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "    metrics = load_json(metrics_path, {})\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "    # Use best model PR-AUC (max across models)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "    pr_vals = [m.get('pr_auc') for m in metrics.values() if isinstance(m, dict) and 'pr_auc' in m]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "    best_pr = max(pr_vals) if pr_vals else None\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "    status = None\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "    if best_pr is not None:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "        status = classify_run(best_pr, args.baseline_pr)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "    missing = check_artifacts(run_dir)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "    # Failure logging\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "    if status in {'FAILURE','WARNING','REGRESSION'}:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "        FAILURE_LOG.parent.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "        with open(FAILURE_LOG, 'a') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "            f.write(textwrap.dedent(f\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "            ## {datetime.utcnow().isoformat()}Z\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "            Run: {run_dir.name}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "            Status: {status}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "            Best PR-AUC: {best_pr}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "            Baseline: {args.baseline_pr}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "            Missing Artifacts: {missing}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "            Snapshot ID: {snapshot_id}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "            \"\"\"))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "    # GPU probe & save\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "    gpu_info = gpu_probe()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "    save_json(run_dir / 'results' / 'gpu_probe.json', gpu_info)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "    # Threshold optimization placeholder\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "    save_json(run_dir / 'results' / 'threshold_optimization.json', optimize_threshold(metrics, recall_target=args.recall_target))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "    # Drift monitor\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "    save_json(run_dir / 'results' / 'data_drift.json', data_drift_monitor(run_dir))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "    # Sparse pruning placeholder\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "    save_json(run_dir / 'results' / 'sparse_pruning.json', sparse_feature_pruner(run_dir))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "    # Record registry entry\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "    registry[snapshot_id] = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "        'run_dir': run_dir.name,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "        'timestamp': ts,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "        'pr_auc': best_pr,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "        'status': status,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "        'baseline': args.baseline_pr,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "        'wall_time_sec': wall,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "        'missing_artifacts': missing,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "    update_registry(registry)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "    # Build dashboard\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "    build_dashboard(registry)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "    # Change impact diff (using stored last hash file if exists)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "    prev_hash_path = RUN_BASE / 'last_vector_stack_hash.txt'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "    diff_summary = compute_diff(prev_hash_path if prev_hash_path.exists() else None, code_hash)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "    (run_dir / 'results' / 'change_diff.txt').write_text(diff_summary)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "    prev_hash_path.write_text(VECTOR_STACK_PATH.read_text())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "    # Generate repro script\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "    repro = f\"#!/bin/bash\\nset -euo pipefail\\ncd $(dirname $0)\\npython {EXTRACT_SCRIPT.relative_to(ROOT)} --sw-angles {args.sw_angles} --lr-penalty {args.lr_penalty} --lr-max-iter {args.lr_max_iter} --svm-max-iter {args.svm_max_iter} --baseline-pr {args.baseline_pr}\\n\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "    (run_dir / 'reproduce.sh').write_text(repro)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "    # Default to non-executable (owner/group/world read) for security; user can chmod +x manually if executing directly\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "    os.chmod(run_dir / 'reproduce.sh', 0o644)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "    # Auto cleanup\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "    auto_cleanup()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "    summary = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "        'run_dir': str(run_dir),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "        'best_pr_auc': best_pr,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "        'status': status,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "        'missing_artifacts': missing,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "        'snapshot_id': snapshot_id,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "        'gpu': gpu_info,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "    save_json(run_dir / 'results' / 'orchestrator_summary.json', summary)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "    print(json.dumps(summary, indent=2))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "    return run_dir, registry\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "# ----------------------------- CLI ----------------------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "def parse_args():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "    p = argparse.ArgumentParser()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "    p.add_argument('--sw-angles', type=int, default=48)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "    p.add_argument('--lr-penalty', choices=['l1','l2'], default='l1')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "    p.add_argument('--lr-max-iter', type=int, default=8000)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "    p.add_argument('--svm-max-iter', type=int, default=8000)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "    p.add_argument('--baseline-pr', type=float, default=0.706)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "    p.add_argument('--skip-ablations', action='store_true')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "    p.add_argument('--no-calibration', action='store_true')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "    p.add_argument('--force', action='store_true', help='Force re-run even if snapshot seen')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "    p.add_argument('--recall-target', type=float, default=0.85)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "    return p.parse_args()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "if __name__ == '__main__':\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "    args = parse_args()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "    run_experiment(args)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 156,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 156
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_eXBJJjAmdWSRAfPVmcT3geY7__vscode-1754745970689": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "PFe",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 20,
                              "text": "20 matches (more results are available)",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {
                            "priority": 20
                          },
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md\" line=60>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 405
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "Validation scripts must reference `validation/extract_vector_stack.py` (or timestamped variant) for reproducibility.",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/UNIFIED_AGENT_INSTRUCTIONS.md",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 59,
                                            "character": 46
                                          },
                                          {
                                            "line": 59,
                                            "character": 69
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 405
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=844>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 406
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  2. Build extraction script validation/extract_vector_stack.py mirroring ",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 843,
                                            "character": 40
                                          },
                                          {
                                            "line": 843,
                                            "character": 63
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 406
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1122>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 407
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     │ 2. Build extraction script validation/extract_vector_stack.py         │",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1121,
                                            "character": 45
                                          },
                                          {
                                            "line": 1121,
                                            "character": 68
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 407
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1166>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 408
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Search(pattern: \"**/extract_vector_stack.py\")",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1165,
                                            "character": 22
                                          },
                                          {
                                            "line": 1165,
                                            "character": 45
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 408
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1172>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 409
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Read(validation/extract_vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1171,
                                            "character": 18
                                          },
                                          {
                                            "line": 1171,
                                            "character": 41
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 409
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1206>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 410
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  2. extract_vector_stack.py - VALIDATION-FIRST EXCELLENCE",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1205,
                                            "character": 5
                                          },
                                          {
                                            "line": 1205,
                                            "character": 28
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 410
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1312>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 411
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  2. Update paths in extract_vector_stack.py to point to existing diagrams",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1311,
                                            "character": 21
                                          },
                                          {
                                            "line": 1311,
                                            "character": 44
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 411
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1371>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 412
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    Your existing vector_stack.py and extract_vector_stack.py files represent ",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1370,
                                            "character": 38
                                          },
                                          {
                                            "line": 1370,
                                            "character": 61
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 412
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1388>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 413
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    - File: Minor edits to extract_vector_stack.py",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1387,
                                            "character": 27
                                          },
                                          {
                                            "line": 1387,
                                            "character": 50
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 413
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1402>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 414
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "    - Execute extract_vector_stack.py on existing diagram data",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1401,
                                            "character": 14
                                          },
                                          {
                                            "line": 1401,
                                            "character": 37
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 414
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1551>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 415
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     ☐ Update extract_vector_stack.py paths and configuration",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1550,
                                            "character": 14
                                          },
                                          {
                                            "line": 1550,
                                            "character": 37
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 415
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1573>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 416
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     ☐ Update extract_vector_stack.py paths and configuration",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1572,
                                            "character": 14
                                          },
                                          {
                                            "line": 1572,
                                            "character": 37
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 416
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1595>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 417
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     into train/test manifest pairs expected by extract_vector_stack.py.",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1594,
                                            "character": 48
                                          },
                                          {
                                            "line": 1594,
                                            "character": 71
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 417
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1607>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 418
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "     ☐ Update extract_vector_stack.py paths and configuration",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1606,
                                            "character": 14
                                          },
                                          {
                                            "line": 1606,
                                            "character": 37
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 418
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1613>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 419
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Perfect! Now let me update the extract_vector_stack.py script to",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1612,
                                            "character": 33
                                          },
                                          {
                                            "line": 1612,
                                            "character": 56
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 419
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1616>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 420
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Read(validation/extract_vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1615,
                                            "character": 18
                                          },
                                          {
                                            "line": 1615,
                                            "character": 41
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 420
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1619>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 421
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Update(validation/extract_vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1618,
                                            "character": 20
                                          },
                                          {
                                            "line": 1618,
                                            "character": 43
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 421
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1620>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 422
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  ⎿  Updated validation/extract_vector_stack.py with 1 addition and 3 removals",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1619,
                                            "character": 24
                                          },
                                          {
                                            "line": 1619,
                                            "character": 47
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 422
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1637>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 423
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Update(validation/extract_vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1636,
                                            "character": 20
                                          },
                                          {
                                            "line": 1636,
                                            "character": 43
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 423
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1638>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 424
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "  ⎿  Updated validation/extract_vector_stack.py with 45 additions and 1 remova",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1637,
                                            "character": 24
                                          },
                                          {
                                            "line": 1637,
                                            "character": 47
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 424
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "wj",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "r",
                              "children": [
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "<match path=\"/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt\" line=1706>\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 425
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "r0e",
                                  "children": [
                                    {
                                      "type": 1,
                                      "ctor": 2,
                                      "ctorName": "Nee",
                                      "children": [
                                        {
                                          "type": 2,
                                          "priority": 1000,
                                          "text": "● Update(validation/extract_vector_stack.py)",
                                          "references": [],
                                          "lineBreakBefore": true
                                        }
                                      ],
                                      "props": {
                                        "priority": 1000
                                      },
                                      "references": []
                                    },
                                    {
                                      "type": 2,
                                      "priority": 1,
                                      "text": "\n",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {
                                    "flexGrow": 1,
                                    "priority": 1
                                  },
                                  "references": [
                                    {
                                      "anchor": {
                                        "uri": {
                                          "$mid": 1,
                                          "fsPath": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "external": "file:///home/stephen-dorman/dev/TDA_projects/%5Bclaude-vector-stack%5D.txt",
                                          "path": "/home/stephen-dorman/dev/TDA_projects/[claude-vector-stack].txt",
                                          "scheme": "file"
                                        },
                                        "range": [
                                          {
                                            "line": 1705,
                                            "character": 20
                                          },
                                          {
                                            "line": 1705,
                                            "character": 43
                                          }
                                        ]
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": 1,
                                  "ctor": 2,
                                  "ctorName": "",
                                  "children": [
                                    {
                                      "type": 2,
                                      "priority": 9007199254740991,
                                      "text": "</match>",
                                      "lineBreakBefore": false
                                    }
                                  ],
                                  "props": {},
                                  "references": [],
                                  "keepWithId": 425
                                },
                                {
                                  "type": 2,
                                  "priority": 9007199254740991,
                                  "text": "\n",
                                  "lineBreakBefore": false
                                }
                              ],
                              "props": {},
                              "references": []
                            }
                          ],
                          "props": {
                            "passPriority": true
                          },
                          "references": [],
                          "flags": 4
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_8anpGnZ2ENRjjCRgsvg8IpTF__vscode-1754745970690": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "FFe",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "SSH_Bruteforce_TDA/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "__pycache__/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "audits/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "automation/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "baseline_gbt_training.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "benchmark_ingest.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "benchmark_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "create_vector_stack_manifests.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_clean_tda_no_leakage/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_collins_network_structure/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_comprehensive_tda/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_enhanced_temporal_tda/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_graph_tda/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_practical_graph_tda/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "ctdapd_topological_dissimilarity/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "deep_tda_breakthrough/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "deep_tda_netflow/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "diagrams/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "diagrams_run2/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "diagrams_run3/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "enhanced_deep_tda_breakthrough/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "enhanced_deep_tda_netflow/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "enhanced_deep_tda_real_validation/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "extract_vector_stack.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "fast_real_data_validation.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "feature_dumps/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "focused_tda_validation_fixed.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "hybrid_baseline_real_validation/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "hybrid_multiscale_graph_tda/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "metrics/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "models/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "real_data_deep_tda_breakthrough/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "real_data_hybrid_baseline/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "real_data_tda_validation.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "real_data_validation/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_improved_strategy_real_data.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_real_cic_with_enhanced_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_small/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_small_outputs/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_stream_loader.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_vector_stack_run.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "test_vector_stack_small.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "train_perslay_embedding.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "unsw_nb15_clean_streaming/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "unsw_nb15_granular_analysis/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "unsw_nb15_tda_enhanced/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_academic_tda_approaches.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_apt_tda_netflow_improved.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_apt_topology_netflow.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_baseline_with_framework.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_bot_enhanced_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_clean_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_collins_network_structure.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_comprehensive_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_enhanced_temporal_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_graph_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_practical_graph_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_ctdapd_topological_dissimilarity.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_hybrid_enhanced.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_hybrid_results.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_infilteration_advanced_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_infilteration_corrected_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_infilteration_robust_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_multiscale_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_simple_deep_tda_netflow.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validate_supervised_tda.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validation_framework.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "validation_results.json",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "variance_assessment.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "vector_stack_experiments/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "vector_stack_outputs/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "visualizations/",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "Nee",
                          "children": [
                            {
                              "type": 2,
                              "priority": 9007199254740991,
                              "text": "visualize_topology.py",
                              "references": [],
                              "lineBreakBefore": true
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_K1gnvvxP6TI6p1oSZNa5GkRk__vscode-1754745970691": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "File: `",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "`. Lines ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "1",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " to ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "260",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " (",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "667",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " lines total): ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "\n",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 262,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 262
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 261,
                                  "text": "\"\"\"Extraction & evaluation script for deterministic vector stack features.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 261
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 260,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 260
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 259,
                                  "text": "Workflow (validation-first, temporal leakage guarded):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 259
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 258,
                                  "text": "1. Load diagram manifests (assumed precomputed & temporally split already) OR compute diagrams if absent.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 258
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 257,
                                  "text": "2. Fit kernel dictionaries on TRAIN diagrams only (H0,H1) respecting temporal boundary.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 257
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 256,
                                  "text": "3. Construct vector stack features for train & test sets (fit normalization on train only).\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 256
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 255,
                                  "text": "4. Train baseline classifiers: Logistic Regression, Linear SVM, Gradient Boosted Trees.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 255
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 254,
                                  "text": "5. Calibrate LR probabilities (isotonic or Platt depending on validation size) using train set CV.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 254
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 253,
                                  "text": "6. Evaluate on test set; compute PR-AUC, ROC-AUC, confusion matrix at default threshold (0.5) and best F1 threshold.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 253
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 252,
                                  "text": "7. Save artifacts: feature matrices, normalization stats, kernel dicts, metrics JSON, block manifest spans.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 252
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 251,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 251
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 250,
                                  "text": "NOTE: This script relies ONLY on topological transformations; no statistical proxies.\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 250
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 249,
                                  "text": "\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 249
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 248,
                                  "text": "from __future__ import annotations\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 248
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 247,
                                  "text": "import os\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 247
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 246,
                                  "text": "import json\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 246
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 245,
                                  "text": "import numpy as np\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 245
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 244,
                                  "text": "from pathlib import Path\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 244
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 243,
                                  "text": "from dataclasses import asdict\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 243
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 242,
                                  "text": "from typing import Dict, List, Tuple, Any\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 242
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 241,
                                  "text": "from sklearn.linear_model import LogisticRegression\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 241
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 240,
                                  "text": "from sklearn.svm import LinearSVC\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 240
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 239,
                                  "text": "from sklearn.ensemble import GradientBoostingClassifier\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 239
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 238,
                                  "text": "from sklearn.calibration import CalibratedClassifierCV\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 238
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 237,
                                  "text": "from sklearn.metrics import precision_recall_curve, average_precision_score, roc_auc_score, confusion_matrix, classification_report, brier_score_loss\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 237
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 236,
                                  "text": "from sklearn.model_selection import StratifiedKFold\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 236
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 235,
                                  "text": "import hashlib\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 235
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 234,
                                  "text": "import matplotlib.pyplot as plt\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 234
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 233,
                                  "text": "from datetime import datetime\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 233
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 232,
                                  "text": "import argparse\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 232
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 231,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 231
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 230,
                                  "text": "from src.embeddings.vector_stack.vector_stack import (\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 230
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 229,
                                  "text": "    VectorStackConfig,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 229
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 228,
                                  "text": "    prepare_kernel_dictionaries,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 228
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 227,
                                  "text": "    build_vector_stack,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 227
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 226,
                                  "text": ")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 226
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 225,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 225
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 224,
                                  "text": "SEED = 1337\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 224
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 223,
                                  "text": "np.random.seed(SEED)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 223
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 222,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 222
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 221,
                                  "text": "# Auto-detect diagram manifests with fallback to latest unified manifest\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 221
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 220,
                                  "text": "TRAIN_MANIFEST = Path('validation/diagrams/train_manifest.json')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 220
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 219,
                                  "text": "TEST_MANIFEST = Path('validation/diagrams/test_manifest.json')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 219
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 218,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 218
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 217,
                                  "text": "def auto_detect_manifests() -> Tuple[Path, Path]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 217
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 216,
                                  "text": "    \"\"\"Auto-detect train/test manifests or create from unified manifest.\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 216
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 215,
                                  "text": "    if TRAIN_MANIFEST.exists() and TEST_MANIFEST.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 215
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 214,
                                  "text": "        print(f\"Found existing train/test manifests\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 214
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 213,
                                  "text": "        return TRAIN_MANIFEST, TEST_MANIFEST\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 213
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 212,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 212
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 211,
                                  "text": "    # Look for latest unified manifest\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 211
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 210,
                                  "text": "    diagram_dirs = [\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 210
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 209,
                                  "text": "        Path('validation/diagrams'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 209
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 208,
                                  "text": "        Path('validation/diagrams_run2'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 208
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 207,
                                  "text": "        Path('validation/diagrams_run3'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 207
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 206,
                                  "text": "    ]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 206
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 205,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 205
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 204,
                                  "text": "    unified_manifests = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 204
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 203,
                                  "text": "    for diagram_dir in diagram_dirs:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 203
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 202,
                                  "text": "        if diagram_dir.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 202
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 201,
                                  "text": "            manifests = list(diagram_dir.glob('diagram_manifest_*.json'))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 201
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 200,
                                  "text": "            unified_manifests.extend([(m, diagram_dir) for m in manifests])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 200
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 199,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 199
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 198,
                                  "text": "    if not unified_manifests:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 198
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 197,
                                  "text": "        raise FileNotFoundError(\"No diagram manifests found\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 197
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 196,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 196
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 195,
                                  "text": "    # Use latest manifest\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 195
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 194,
                                  "text": "    latest_manifest, diagram_dir = max(unified_manifests, key=lambda x: x[0].stat().st_mtime)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 194
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 193,
                                  "text": "    print(f\"Using latest unified manifest: {latest_manifest}\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 193
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 192,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 192
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 191,
                                  "text": "    # Create train/test manifests using bridge script\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 191
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 190,
                                  "text": "    import sys\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 190
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 189,
                                  "text": "    sys.path.append(str(Path(__file__).parent))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 189
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 188,
                                  "text": "    from create_vector_stack_manifests import create_train_test_manifests, update_diagram_paths\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 188
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 187,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 187
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 186,
                                  "text": "    output_dir = latest_manifest.parent\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 186
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 185,
                                  "text": "    train_path, test_path = create_train_test_manifests(\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 185
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 184,
                                  "text": "        latest_manifest,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 184
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 183,
                                  "text": "        output_dir,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 183
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 182,
                                  "text": "        split_ratio=0.7,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 182
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 181,
                                  "text": "        temporal_split=True\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 181
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 180,
                                  "text": "    )\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 180
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 179,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 179
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 178,
                                  "text": "    # Update diagram paths to point to correct directory\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 178
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 177,
                                  "text": "    update_diagram_paths(train_path, diagram_dir)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 177
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 176,
                                  "text": "    update_diagram_paths(test_path, diagram_dir)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 176
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 175,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 175
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 174,
                                  "text": "    return train_path, test_path\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 174
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 173,
                                  "text": "OUTPUT_DIR = Path('validation/vector_stack_outputs')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 173
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 172,
                                  "text": "RUN_DIR = OUTPUT_DIR / datetime.utcnow().strftime('%Y%m%d_%H%M%S')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 172
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 171,
                                  "text": "RUN_DIR.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 171
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 170,
                                  "text": "PLOTS_DIR = RUN_DIR / 'plots'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 170
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 169,
                                  "text": "PLOTS_DIR.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 169
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 168,
                                  "text": "RAW_DIR = RUN_DIR / 'raw_output'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 168
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 167,
                                  "text": "RAW_DIR.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 167
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 166,
                                  "text": "RESULTS_DIR = RUN_DIR / 'results'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 166
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 165,
                                  "text": "RESULTS_DIR.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 165
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 164,
                                  "text": "DATA_DIR = RUN_DIR / 'data'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 164
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 163,
                                  "text": "DATA_DIR.mkdir(parents=True, exist_ok=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 163
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 162,
                                  "text": "KERNEL_META_PATH = DATA_DIR / 'kernel_dicts_meta.json'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 162
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 161,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 161
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 160,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 160
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 159,
                                  "text": "def load_diagram_manifest(manifest_path: Path) -> List[Dict[str, Any]]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 159
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 158,
                                  "text": "    \"\"\"Load diagram manifest, handling both old and new formats.\"\"\"\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 158
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 157,
                                  "text": "    with open(manifest_path, 'r') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 157
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 156,
                                  "text": "        data = json.load(f)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 156
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 155,
                                  "text": "    \n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 155
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "    # Handle different manifest formats\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 153,
                                  "text": "    if 'windows' in data:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 153
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 152,
                                  "text": "        # New split manifest format\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 152
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 151,
                                  "text": "        return data['windows']\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 151
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "    elif 'entries' in data:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "        # Baseline training format - convert to expected format\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "        entries = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "        for entry in data['entries']:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "            converted = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "                'order': entry['order'],\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "                'start_time': entry['start_time'],\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "                'label': entry['label'],\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "                'diagram_path': str(manifest_path.parent / entry['file'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "            }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "            entries.append(converted)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "        return entries\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "    elif isinstance(data, list):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "        # Simple list format\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "        return data\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "        raise ValueError(f\"Unknown manifest format in {manifest_path}\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "def load_diagram(npz_path: Path) -> Dict[int, np.ndarray]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "    data = np.load(npz_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "    diagrams: Dict[int, np.ndarray] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "    for key in data.files:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "        if key.startswith('dgm_H'):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "            dim = int(key.split('H')[1])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "            diagrams[dim] = data[key]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "    return diagrams\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "def build_feature_matrices(train_entries: List[Dict[str, Any]], test_entries: List[Dict[str, Any]], cfg: VectorStackConfig):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "    # Collect training diagrams per dim for kernel dictionaries\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "    train_diagrams_by_dim: Dict[int, List[np.ndarray]] = {d: [] for d in cfg.homology_dims}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "    for rec in train_entries:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "        dgm_path = Path(rec['diagram_path'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "        dgm_dict = load_diagram(dgm_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "        for dim in cfg.homology_dims:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "            train_diagrams_by_dim[dim].append(dgm_dict.get(dim, np.zeros((0, 2), dtype=float)))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "    kernel_dicts = prepare_kernel_dictionaries(train_diagrams_by_dim, cfg, out_path=OUTPUT_DIR / 'kernel_dicts.npz')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "    # Build vectors\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "    X_train = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "    y_train = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "    norm_stats = None\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "    spans_ref = None\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "    for rec in train_entries:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "        dgm_path = Path(rec['diagram_path'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "        dgm_dict = load_diagram(dgm_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "        vec, norm_stats, spans = build_vector_stack(dgm_dict, cfg, kernel_dicts, norm_stats=norm_stats, fit_norm=(norm_stats is None))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "        if spans_ref is None:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "            spans_ref = spans\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "        X_train.append(vec)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "        y_train.append(rec['label'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "    X_test = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "    y_test = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "    for rec in test_entries:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "        dgm_path = Path(rec['diagram_path'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "        dgm_dict = load_diagram(dgm_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "        vec, _, _ = build_vector_stack(dgm_dict, cfg, kernel_dicts, norm_stats=norm_stats, fit_norm=False)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "        X_test.append(vec)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "        y_test.append(rec['label'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "    return np.vstack(X_train), np.array(y_train), np.vstack(X_test), np.array(y_test), norm_stats, spans_ref, kernel_dicts\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "def _hash_training_manifest(entries: List[Dict[str, Any]]) -> str:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "    h = hashlib.sha256()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "    for rec in sorted(entries, key=lambda r: r['diagram_path']):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "        h.update(rec['diagram_path'].encode('utf-8'))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "        h.update(str(rec.get('label')).encode('utf-8'))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "        h.update(str(rec.get('start_time')).encode('utf-8'))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "    return h.hexdigest()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "def train_and_evaluate(X_train, y_train, X_test, y_test, args):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "    results = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "    # Logistic Regression (optionally calibrated)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "    lr_base = LogisticRegression(\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "        solver='saga', penalty=args.lr_penalty, C=1.0, max_iter=args.lr_max_iter,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "        class_weight='balanced', random_state=SEED, n_jobs=1, tol=args.lr_tol\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "    )\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "    if args.no_calibration:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "        lr_base.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "        lr_probs = lr_base.predict_proba(X_test)[:,1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "        calib_lr = CalibratedClassifierCV(lr_base, method='sigmoid', cv=StratifiedKFold(n_splits=3, shuffle=True, random_state=SEED))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "        calib_lr.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "        lr_probs = calib_lr.predict_proba(X_test)[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "    results['logistic_regression'] = _evaluate_probs(lr_probs, y_test)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "    # Linear SVM (probabilities via calibration)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "    svm = LinearSVC(class_weight='balanced', random_state=SEED, max_iter=args.svm_max_iter)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "    if args.no_calibration:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "        svm.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "        # Decision function -> map to pseudo-prob via sigmoid scaling\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "        from sklearn.preprocessing import MinMaxScaler\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "        dec = svm.decision_function(X_test)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "        mms = MinMaxScaler()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "        svm_probs = mms.fit_transform(dec.reshape(-1,1)).ravel()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "        calib_svm = CalibratedClassifierCV(svm, method='sigmoid', cv=StratifiedKFold(n_splits=3, shuffle=True, random_state=SEED))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "        calib_svm.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "        svm_probs = calib_svm.predict_proba(X_test)[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "    results['linear_svm'] = _evaluate_probs(svm_probs, y_test)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "    # Gradient Boosted Trees (unchanged params for now)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "    gbt = GradientBoostingClassifier(random_state=SEED)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "    gbt.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "    gbt_probs = gbt.predict_proba(X_test)[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "    results['gradient_boosted_trees'] = _evaluate_probs(gbt_probs, y_test)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "    results['gradient_boosted_trees']['feature_importances'] = gbt.feature_importances_.tolist()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "    return results\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "def _evaluate_probs(probs: np.ndarray, y_true: np.ndarray) -> Dict[str, Any]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "    pr_auc = average_precision_score(y_true, probs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "    roc_auc = roc_auc_score(y_true, probs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "    precision, recall, thresholds = precision_recall_curve(y_true, probs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "    f1_scores = 2 * precision * recall / (precision + recall + 1e-12)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "    best_idx = int(np.argmax(f1_scores))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "    best_threshold = thresholds[best_idx - 1] if best_idx > 0 and best_idx - 1 < thresholds.size else 0.5\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "    preds_default = (probs >= 0.5).astype(int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "    preds_best = (probs >= best_threshold).astype(int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "    cm_default = confusion_matrix(y_true, preds_default).tolist()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "    cm_best = confusion_matrix(y_true, preds_best).tolist()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "    return {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "        'pr_auc': float(pr_auc),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "        'roc_auc': float(roc_auc),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "        'best_f1': float(f1_scores[best_idx]),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "        'best_threshold': float(best_threshold),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "        'confusion_default': cm_default,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "        'confusion_best': cm_best,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "def _plot_pr_curve(probs: np.ndarray, y_true: np.ndarray, path: Path, title: str):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "    precision, recall, _ = precision_recall_curve(y_true, probs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "    plt.plot(recall, precision, label='PR curve')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "    plt.xlabel('Recall')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "    plt.ylabel('Precision')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "    plt.title(title)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "    plt.legend()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "def _plot_roc_curve(probs: np.ndarray, y_true: np.ndarray, path: Path, title: str):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "    from sklearn.metrics import roc_curve\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "    fpr, tpr, _ = roc_curve(y_true, probs)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "    plt.plot(fpr, tpr, label='ROC curve')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 262,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 262
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_jqidxOLMO74yvuFhB1RgBsJi__vscode-1754745970692": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "File: `",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "`. Lines ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "260",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " to ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "520",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " (",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "667",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": " lines total): ",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 2,
                          "priority": 9007199254740991,
                          "text": "\n",
                          "lineBreakBefore": false
                        },
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 263,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 263
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 262,
                                  "text": "    plt.plot(fpr, tpr, label='ROC curve')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 262
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 261,
                                  "text": "    plt.plot([0, 1], [0, 1], '--', color='gray')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 261
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 260,
                                  "text": "    plt.xlabel('FPR')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 260
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 259,
                                  "text": "    plt.ylabel('TPR')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 259
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 258,
                                  "text": "    plt.title(title)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 258
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 257,
                                  "text": "    plt.legend()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 257
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 256,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 256
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 255,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 255
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 254,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 254
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 253,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 253
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 252,
                                  "text": "def _plot_confusion(cm: List[List[int]], path: Path, title: str):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 252
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 251,
                                  "text": "    import seaborn as sns\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 251
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 250,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 250
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 249,
                                  "text": "    sns.heatmap(np.array(cm), annot=True, fmt='d', cmap='Blues')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 249
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 248,
                                  "text": "    plt.xlabel('Predicted')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 248
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 247,
                                  "text": "    plt.ylabel('True')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 247
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 246,
                                  "text": "    plt.title(title)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 246
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 245,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 245
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 244,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 244
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 243,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 243
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 242,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 242
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 241,
                                  "text": "def _plot_feature_importance(importances: np.ndarray, path: Path, top_n: int = 30):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 241
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 240,
                                  "text": "    if importances.size == 0:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 240
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 239,
                                  "text": "        return\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 239
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 238,
                                  "text": "    idx = np.argsort(importances)[::-1][:top_n]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 238
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 237,
                                  "text": "    vals = importances[idx]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 237
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 236,
                                  "text": "    plt.figure(figsize=(6, max(3, 0.25 * top_n)))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 236
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 235,
                                  "text": "    plt.barh(range(len(idx)), vals[::-1])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 235
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 234,
                                  "text": "    plt.yticks(range(len(idx)), [f'f{i}' for i in idx[::-1]])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 234
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 233,
                                  "text": "    plt.xlabel('Importance')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 233
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 232,
                                  "text": "    plt.title(f'GBT Feature Importance (top {len(idx)})')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 232
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 231,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 231
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 230,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 230
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 229,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 229
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 228,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 228
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 227,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 227
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 226,
                                  "text": "def _plot_prediction_distribution(probs: np.ndarray, path: Path, bins: int = 40):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 226
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 225,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 225
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 224,
                                  "text": "    plt.hist(probs, bins=bins, alpha=0.75, color='steelblue', edgecolor='black')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 224
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 223,
                                  "text": "    plt.xlabel('Predicted Probability')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 223
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 222,
                                  "text": "    plt.ylabel('Count')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 222
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 221,
                                  "text": "    plt.title('Prediction Probability Distribution (LR)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 221
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 220,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 220
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 219,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 219
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 218,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 218
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 217,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 217
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 216,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 216
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 215,
                                  "text": "# ---------------- Additional Plot & Reporting Utilities ---------------- #\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 215
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 214,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 214
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 213,
                                  "text": "def _log(msg: str):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 213
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 212,
                                  "text": "    print(msg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 212
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 211,
                                  "text": "    _write_raw_log([msg])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 211
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 210,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 210
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 209,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 209
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 208,
                                  "text": "def _plot_reliability_curve(probs: np.ndarray, y_true: np.ndarray, path: Path, n_bins: int = 15):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 208
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 207,
                                  "text": "    bins = np.linspace(0.0, 1.0, n_bins + 1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 207
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 206,
                                  "text": "    digitized = np.digitize(probs, bins) - 1\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 206
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 205,
                                  "text": "    bin_centers = (bins[:-1] + bins[1:]) / 2\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 205
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 204,
                                  "text": "    observed = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 204
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 203,
                                  "text": "    counts = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 203
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 202,
                                  "text": "    for b in range(n_bins):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 202
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 201,
                                  "text": "        mask = digitized == b\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 201
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 200,
                                  "text": "        if mask.any():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 200
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 199,
                                  "text": "            observed.append(y_true[mask].mean())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 199
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 198,
                                  "text": "            counts.append(mask.sum())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 198
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 197,
                                  "text": "        else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 197
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 196,
                                  "text": "            observed.append(np.nan)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 196
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 195,
                                  "text": "            counts.append(0)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 195
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 194,
                                  "text": "    observed = np.array(observed)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 194
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 193,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 193
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 192,
                                  "text": "    plt.plot([0,1],[0,1],'--',color='gray',label='Perfect')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 192
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 191,
                                  "text": "    plt.plot(bin_centers, observed, marker='o', label='Observed')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 191
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 190,
                                  "text": "    plt.xlabel('Predicted probability')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 190
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 189,
                                  "text": "    plt.ylabel('Observed frequency (attack)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 189
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 188,
                                  "text": "    plt.title('Calibration (Reliability) Curve')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 188
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 187,
                                  "text": "    plt.legend()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 187
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 186,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 186
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 185,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 185
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 184,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 184
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 183,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 183
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 182,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 182
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 181,
                                  "text": "def _plot_confusion_best(cm: List[List[int]], path: Path, title: str):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 181
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 180,
                                  "text": "    import seaborn as sns\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 180
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 179,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 179
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 178,
                                  "text": "    sns.heatmap(np.array(cm), annot=True, fmt='d', cmap='Purples')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 178
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 177,
                                  "text": "    plt.xlabel('Predicted')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 177
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 176,
                                  "text": "    plt.ylabel('True')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 176
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 175,
                                  "text": "    plt.title(title)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 175
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 174,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 174
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 173,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 173
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 172,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 172
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 171,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 171
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 170,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 170
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 169,
                                  "text": "def _sample_persistence_diagrams(train_entries: List[Dict[str,Any]], max_samples: int = 12) -> Dict[int, List[np.ndarray]]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 169
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 168,
                                  "text": "    sel = train_entries[:max_samples]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 168
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 167,
                                  "text": "    by_dim: Dict[int,List[np.ndarray]] = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 167
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 166,
                                  "text": "    for rec in sel:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 166
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 165,
                                  "text": "        dgm_dict = load_diagram(Path(rec['diagram_path']))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 165
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 164,
                                  "text": "        for dim, arr in dgm_dict.items():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 164
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 163,
                                  "text": "            by_dim.setdefault(dim, []).append(arr)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 163
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 162,
                                  "text": "    return by_dim\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 162
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 161,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 161
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 160,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 160
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 159,
                                  "text": "def _plot_persistence_diagrams(train_entries: List[Dict[str,Any]], path: Path, max_samples: int = 12):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 159
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 158,
                                  "text": "    by_dim = _sample_persistence_diagrams(train_entries, max_samples)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 158
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 157,
                                  "text": "    dims = sorted(by_dim.keys())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 157
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 156,
                                  "text": "    ncols = len(dims)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 156
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 155,
                                  "text": "    plt.figure(figsize=(4*ncols,4))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 155
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 154,
                                  "text": "    for i, dim in enumerate(dims):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 154
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 153,
                                  "text": "        plt.subplot(1,ncols,i+1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 153
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 152,
                                  "text": "        for arr in by_dim[dim]:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 152
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 151,
                                  "text": "            if arr.size == 0: continue\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 151
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "            finite = arr[np.isfinite(arr[:,1])]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "            if finite.size == 0: continue\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "            plt.scatter(finite[:,0], finite[:,1], s=8, alpha=0.4)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "        lims = plt.gca().get_xlim()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "        plt.plot(lims, lims, '--', color='gray', linewidth=1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "        plt.title(f'H{dim} diagrams')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "        plt.xlabel('Birth')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "        plt.ylabel('Death')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "def _plot_topological_feature_comparison(X_train: np.ndarray, spans: Dict[str, Tuple[int,int]], path: Path, top_n: int = 25):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "    mean_abs: List[Tuple[str,float]] = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "    for key,(a,b) in spans.items():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "        seg = X_train[:, a:b]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "        val = float(np.mean(np.abs(seg))) if seg.size>0 else 0.0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "        mean_abs.append((key,val))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "    mean_abs.sort(key=lambda x: x[1], reverse=True)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "    subset = mean_abs[:top_n]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "    labels = [k for k,_ in subset][::-1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "    vals = [v for _,v in subset][::-1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "    plt.figure(figsize=(8, max(4,0.35*len(subset))))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "    plt.barh(range(len(subset)), vals)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "    plt.yticks(range(len(subset)), labels, fontsize=7)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "    plt.xlabel('Mean |feature| (normalized)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "    plt.title('Topological Feature Block Importance (proxy magnitude)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "def _plot_attack_type_performance(y_true: np.ndarray, probs: np.ndarray, path: Path):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "    preds = (probs >= 0.5).astype(int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "    from sklearn.metrics import precision_score, recall_score, f1_score\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "    prec = float(precision_score(y_true, preds, pos_label=1, zero_division=0))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "    rec = float(recall_score(y_true, preds, pos_label=1, zero_division=0))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "    f1 = float(f1_score(y_true, preds, pos_label=1, zero_division=0))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "    plt.figure()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "    plt.bar(['Precision','Recall','F1'], [prec, rec, f1], color=['#1f77b4','#ff7f0e','#2ca02c'])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "    plt.ylim(0,1)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "    plt.title('Attack Class Performance (LR, thr=0.5)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "    for i, v in enumerate([prec, rec, f1]):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "        plt.text(i, float(v)+0.02, f'{v:.2f}', ha='center')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "    plt.tight_layout()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "    plt.savefig(path, dpi=150)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "    plt.close()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "def parse_args():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "    parser = argparse.ArgumentParser()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "    parser.add_argument('--verbose', action='store_true', help='Verbose progress output')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "    parser.add_argument('--sw-angles', type=int, default=48, help='Number of sliced Wasserstein angles (was 32)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "    parser.add_argument('--lr-max-iter', type=int, default=8000, help='Logistic regression max_iter (was 2000)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "    parser.add_argument('--svm-max-iter', type=int, default=8000, help='Linear SVM max_iter (default sklearn)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "    parser.add_argument('--lr-penalty', choices=['l1','l2'], default='l1', help='LR penalty (use saga)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "    parser.add_argument('--lr-tol', type=float, default=1e-3, help='LR tolerance')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "    parser.add_argument('--baseline-pr', type=float, default=0.706, help='Baseline PR-AUC to compare degradation against (PersLay plateau)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "    parser.add_argument('--skip-ablations', action='store_true', help='Skip ablation runs for faster iteration')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "    parser.add_argument('--no-calibration', action='store_true', help='Disable probability calibration (speed)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "    # NEW: explicit manifest overrides\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "    parser.add_argument('--train-manifest', type=str, default=None, help='Explicit path to precomputed train manifest (bypass auto-detect)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "    parser.add_argument('--test-manifest', type=str, default=None, help='Explicit path to precomputed test manifest (bypass auto-detect)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "    return parser.parse_args()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "def main():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "    args = parse_args()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "    # Auto-detect or use explicit manifests\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "    if args.train_manifest and args.test_manifest:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "        train_manifest_path = Path(args.train_manifest)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "        test_manifest_path = Path(args.test_manifest)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "        if not train_manifest_path.exists() or not test_manifest_path.exists():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "            raise FileNotFoundError(f\"Provided manifest(s) missing: {train_manifest_path} {test_manifest_path}\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "        _log(f'Using explicit manifests (no auto-detect): {train_manifest_path} | {test_manifest_path}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "        train_manifest_path, test_manifest_path = auto_detect_manifests()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "    _log(f'Train manifest: {train_manifest_path}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "    _log(f'Test manifest: {test_manifest_path}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "    train_entries = load_diagram_manifest(train_manifest_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "    test_entries = load_diagram_manifest(test_manifest_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "    _log(f'Train entries: {len(train_entries)} | Test entries: {len(test_entries)}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "    # Temporal leakage guard\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "    max_train_time = max(rec['start_time'] for rec in train_entries)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "    min_test_time = min(rec['start_time'] for rec in test_entries)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "    _log(f'Max train time: {max_train_time} | Min test time: {min_test_time}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "    if not (max_train_time < min_test_time):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "        raise RuntimeError(\"Temporal leakage detected: training max timestamp >= test min timestamp\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "    # Config with updated SW angles & verbose flag\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "    cfg = VectorStackConfig(sw_num_angles=args.sw_angles)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "    # Build features\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "    X_train, y_train, X_test, y_test, norm_stats, spans, kernel_dicts = build_feature_matrices(train_entries, test_entries, cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "    _log(f'Feature dims: train {X_train.shape}, test {X_test.shape}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "    pos_rate = float(y_train.mean())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "    _log(f'Class prior (train attack rate): {pos_rate:.4f}')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "    # Persist kernel dict metadata early\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "    with open(KERNEL_META_PATH, 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "        json.dump({k: {'sigma_base': v['sigma_base'], 'centers_shape': list(v['centers'].shape)} for k, v in kernel_dicts.items()}, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "    results = train_and_evaluate(X_train, y_train, X_test, y_test, args)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "    manifest_hash = _hash_training_manifest(train_entries)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "    # Persist artifacts\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "    np.savez_compressed(DATA_DIR / 'X_train.npz', X=X_train, y=y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "    np.savez_compressed(DATA_DIR / 'X_test.npz', X=X_test, y=y_test)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "    with open(DATA_DIR / 'norm_stats.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "        json.dump(norm_stats, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "    with open(DATA_DIR / 'spans.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "        if spans is not None:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "            json.dump({k: [v[0], v[1]] for k, v in spans.items()}, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "        else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "            json.dump({}, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "    with open(DATA_DIR / 'config.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "        json.dump(asdict(cfg), f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "    with open(RESULTS_DIR / 'metrics.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "        json.dump(results, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "    # Failure / degradation flags relative to PersLay plateau (or supplied baseline)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "    baseline_pr_auc = args.baseline_pr\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "    for model_name, stats in results.items():\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "        stats['degradation_flag'] = bool(baseline_pr_auc - stats['pr_auc'] > 0.05)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "    with open(RESULTS_DIR / 'metrics_with_flags.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "        json.dump(results, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "    # Plots (logistic regression curves)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "    if 'logistic_regression' in results:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "        lr = LogisticRegression(solver='saga', penalty=args.lr_penalty, C=1.0, max_iter=args.lr_max_iter,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "                                class_weight='balanced', random_state=SEED, n_jobs=1, tol=args.lr_tol)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "        if args.no_calibration:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "            lr.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "            lr_probs = lr.predict_proba(X_test)[:,1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "        else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "            calib_lr = CalibratedClassifierCV(lr, method='sigmoid', cv=StratifiedKFold(n_splits=3, shuffle=True, random_state=SEED))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "            calib_lr.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "            lr_probs = calib_lr.predict_proba(X_test)[:, 1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "        _plot_pr_curve(lr_probs, y_test, PLOTS_DIR / 'precision_recall_curve.png', 'Vector Stack PR Curve (LR)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "        _plot_roc_curve(lr_probs, y_test, PLOTS_DIR / 'roc_curve.png', 'Vector Stack ROC Curve (LR)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "        _plot_prediction_distribution(lr_probs, PLOTS_DIR / 'prediction_distribution.png')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "        from sklearn.metrics import confusion_matrix as _cm\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "        preds = (lr_probs >= 0.5).astype(int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "        cm = _cm(y_test, preds).tolist()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "        _plot_confusion(cm, PLOTS_DIR / 'confusion_matrix.png', 'Confusion Matrix (LR, thr=0.5)')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "        report_str = str(classification_report(y_test, preds))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 263,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 263
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            },
            "call_AiHGXJJaC1JHFKAWIArCbb92__vscode-1754745970693": {
              "$mid": 20,
              "content": [
                {
                  "$mid": 22,
                  "value": {
                    "node": {
                      "type": 1,
                      "ctor": 2,
                      "ctorName": "$j",
                      "children": [
                        {
                          "type": 1,
                          "ctor": 2,
                          "ctorName": "He",
                          "children": [
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "```python\n",
                                  "references": [
                                    {
                                      "anchor": {
                                        "$mid": 1,
                                        "fsPath": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "external": "file:///home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "path": "/home/stephen-dorman/dev/TDA_projects/validation/extract_vector_stack.py",
                                        "scheme": "file"
                                      },
                                      "options": {
                                        "isFromTool": true
                                      }
                                    }
                                  ],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 149,
                                  "text": "        report_str = str(classification_report(y_test, preds))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 149
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 148,
                                  "text": "        with open(RAW_DIR / 'classification_report.txt', 'w') as rf:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 148
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 147,
                                  "text": "            rf.write(report_str)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 147
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 146,
                                  "text": "        best_thr = results['logistic_regression']['best_threshold']\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 146
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 145,
                                  "text": "        best_preds = (lr_probs >= best_thr).astype(int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 145
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 144,
                                  "text": "        cm_best = confusion_matrix(y_test, best_preds).tolist()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 144
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 143,
                                  "text": "        _plot_confusion_best(cm_best, PLOTS_DIR / 'confusion_matrix_best_threshold.png', f'Confusion (LR, thr={best_thr:.3f})')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 143
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 142,
                                  "text": "        _plot_attack_type_performance(y_test, lr_probs, PLOTS_DIR / 'attack_type_performance.png')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 142
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 141,
                                  "text": "        _plot_reliability_curve(lr_probs, y_test, PLOTS_DIR / 'reliability_curve.png')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 141
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 140,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 140
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 139,
                                  "text": "    if 'gradient_boosted_trees' in results and 'feature_importances' in results['gradient_boosted_trees']:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 139
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 138,
                                  "text": "        _plot_feature_importance(np.array(results['gradient_boosted_trees']['feature_importances']), PLOTS_DIR / 'feature_importance.png')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 138
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 137,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 137
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 136,
                                  "text": "    ablation_results = run_ablation(X_train, y_train, X_test, y_test, cfg, norm_stats, kernel_dicts, spans,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 136
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 135,
                                  "text": "                                   train_manifest_path, test_manifest_path, args=args)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 135
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 134,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 134
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 133,
                                  "text": "    _plot_persistence_diagrams(train_entries, PLOTS_DIR / 'persistence_diagrams.png')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 133
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 132,
                                  "text": "    if spans is not None:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 132
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 131,
                                  "text": "        _plot_topological_feature_comparison(X_train, spans, PLOTS_DIR / 'topological_features_comparison.png')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 131
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 130,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 130
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 129,
                                  "text": "    overall_metrics, attack_type_metrics, per_run = _aggregate_multi_run_metrics(X_train, y_train, X_test, y_test, args=args)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 129
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 128,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 128
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 127,
                                  "text": "    if 'logistic_regression' in results:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 127
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 126,
                                  "text": "        # recomputed above\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 126
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 125,
                                  "text": "        sep = 0.0  # placeholder (optional refinement)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 125
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 124,
                                  "text": "    else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 124
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 123,
                                  "text": "        sep = 0.0\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 123
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 122,
                                  "text": "    mandatory_metrics = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 122
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 121,
                                  "text": "        'overall_metrics': overall_metrics,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 121
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 120,
                                  "text": "        'attack_type_metrics': attack_type_metrics,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 120
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 119,
                                  "text": "        'topological_analysis': {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 119
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 118,
                                  "text": "            'homology_dimensions_analyzed': [f'H{d}' for d in cfg.homology_dims],\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 118
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 117,
                                  "text": "            'persistence_features_extracted': int(X_train.shape[1]),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 117
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 116,
                                  "text": "            'topological_separability_score': sep\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 116
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 115,
                                  "text": "        }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 115
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 114,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 114
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 113,
                                  "text": "    with open(RESULTS_DIR / 'mandatory_metrics.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 113
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 112,
                                  "text": "        json.dump(mandatory_metrics, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 112
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 111,
                                  "text": "    with open(RESULTS_DIR / 'multi_run_raw.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 111
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 110,
                                  "text": "        json.dump(per_run, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 110
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 109,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 109
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 108,
                                  "text": "    report_lines = [\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 108
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 107,
                                  "text": "        '# VALIDATION_REPORT',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 107
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 106,
                                  "text": "        f'- Manifest hash: {manifest_hash}',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 106
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 105,
                                  "text": "        f'- Baseline PR-AUC (reference): {baseline_pr_auc}',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 105
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 104,
                                  "text": "        f'- Models: {\", \".join(results.keys())}',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 104
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 103,
                                  "text": "        f'- Aggregated F1 (LR) mean±std: {overall_metrics[\"f1_score\"][\"mean\"]:.3f} ± {overall_metrics[\"f1_score\"][\"std\"]:.3f}',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 103
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 102,
                                  "text": "        '## Evidence Files',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 102
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 101,
                                  "text": "        'Plots: precision_recall_curve.png, roc_curve.png, prediction_distribution.png, reliability_curve.png, feature_importance.png, confusion_matrix.png, confusion_matrix_best_threshold.png, attack_type_performance.png, persistence_diagrams.png, topological_features_comparison.png',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 101
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 100,
                                  "text": "        'Metrics: metrics.json, metrics_with_flags.json, mandatory_metrics.json',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 100
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 99,
                                  "text": "        'Raw: classification_report.txt, console_output.log',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 99
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 98,
                                  "text": "        'Ablations: ablation_results.json'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 98
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 97,
                                  "text": "    ]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 97
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 96,
                                  "text": "    with open(RUN_DIR / 'VALIDATION_REPORT.md', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 96
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 95,
                                  "text": "        f.write('\\n'.join(report_lines) + '\\n')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 95
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 94,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 94
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 93,
                                  "text": "    _write_raw_log([\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 93
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 92,
                                  "text": "        f\"Manifest hash: {manifest_hash}\",\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 92
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 91,
                                  "text": "        f\"Baseline PR-AUC (reference): {baseline_pr_auc}\",\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 91
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 90,
                                  "text": "        f\"Models: {list(results.keys())}\",\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 90
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 89,
                                  "text": "        f\"Ablations: {list(ablation_results.keys())}\",\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 89
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 88,
                                  "text": "    ])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 88
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 87,
                                  "text": "    print(\"Run complete. Summary at\", RUN_DIR / 'validation_summary.json')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 87
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 86,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 86
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 85,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 85
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 84,
                                  "text": "def _write_raw_log(lines: List[str]):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 84
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 83,
                                  "text": "    log_path = RAW_DIR / 'console_output.log'\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 83
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 82,
                                  "text": "    with open(log_path, 'a') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 82
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 81,
                                  "text": "        for line in lines:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 81
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 80,
                                  "text": "            f.write(line.rstrip() + '\\n')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 80
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 79,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 79
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 78,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 78
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 77,
                                  "text": "def run_ablation(X_train, y_train, X_test, y_test, base_cfg: VectorStackConfig, norm_stats, kernel_dicts, spans,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 77
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 76,
                                  "text": "                 train_manifest_path: Path, test_manifest_path: Path, args=None):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 76
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 75,
                                  "text": "    if args and args.skip_ablations:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 75
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 74,
                                  "text": "        return {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 74
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 73,
                                  "text": "    ablation_order = [\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 73
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 72,
                                  "text": "        ('full', {}),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 72
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 71,
                                  "text": "        ('minus_sw', {'enable_sw': False}),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 71
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 70,
                                  "text": "        ('minus_kernels', {'enable_kernels': False}),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 70
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 69,
                                  "text": "        ('minus_images', {'enable_images': False}),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 69
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 68,
                                  "text": "        ('minus_landscapes', {'enable_landscapes': False}),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 68
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 67,
                                  "text": "        ('minus_betti', {'enable_betti': False}),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 67
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 66,
                                  "text": "    ]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 66
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 65,
                                  "text": "    ablation_results = {}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 65
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 64,
                                  "text": "    for name, overrides in ablation_order:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 64
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 63,
                                  "text": "        _log(f\"Running ablation: {name}\")\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 63
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 62,
                                  "text": "        cfg = VectorStackConfig(**{**asdict(base_cfg), **overrides})\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 62
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 61,
                                  "text": "        train_entries = load_diagram_manifest(train_manifest_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 61
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 60,
                                  "text": "        test_entries = load_diagram_manifest(test_manifest_path)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 60
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 59,
                                  "text": "        Xtr, ytr, Xte, yte, _, _, _ = build_feature_matrices(train_entries, test_entries, cfg)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 59
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 58,
                                  "text": "        res = train_and_evaluate(Xtr, ytr, Xte, yte, args)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 58
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 57,
                                  "text": "        ablation_results[name] = res\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 57
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 56,
                                  "text": "    with open(RESULTS_DIR / 'ablation_results.json', 'w') as f:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 56
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 55,
                                  "text": "        json.dump(ablation_results, f, indent=2)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 55
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 54,
                                  "text": "    return ablation_results\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 54
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 53,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 53
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 52,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 52
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 51,
                                  "text": "def _aggregate_multi_run_metrics(X_train, y_train, X_test, y_test, n_runs: int = 5, base_seed: int = 1400, args=None):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 51
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 50,
                                  "text": "    from sklearn.metrics import f1_score, accuracy_score, precision_score, recall_score\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 50
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 49,
                                  "text": "    run_stats = []\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 49
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 48,
                                  "text": "    seeds = [base_seed + i for i in range(n_runs)]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 48
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 47,
                                  "text": "    for s in seeds:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 47
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 46,
                                  "text": "        lr = LogisticRegression(solver='saga', penalty=args.lr_penalty if args else 'l1', C=1.0,\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 46
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 45,
                                  "text": "                                max_iter=(args.lr_max_iter if args else 8000), class_weight='balanced',\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 45
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 44,
                                  "text": "                                random_state=s, n_jobs=1, tol=(args.lr_tol if args else 1e-3))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 44
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 43,
                                  "text": "        if args and args.no_calibration:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 43
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 42,
                                  "text": "            lr.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 42
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 41,
                                  "text": "            probs = lr.predict_proba(X_test)[:,1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 41
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 40,
                                  "text": "        else:\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 40
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 39,
                                  "text": "            calib = CalibratedClassifierCV(lr, method='sigmoid', cv=StratifiedKFold(n_splits=3, shuffle=True, random_state=s))\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 39
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 38,
                                  "text": "            calib.fit(X_train, y_train)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 38
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 37,
                                  "text": "            probs = calib.predict_proba(X_test)[:,1]\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 37
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 36,
                                  "text": "        preds = (probs >= 0.5).astype(int)\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 36
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 35,
                                  "text": "        run_stats.append({\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 35
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 34,
                                  "text": "            'f1': f1_score(y_test, preds, zero_division=0),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 34
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 33,
                                  "text": "            'accuracy': accuracy_score(y_test, preds),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 33
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 32,
                                  "text": "            'precision': precision_score(y_test, preds, zero_division=0),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 32
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 31,
                                  "text": "            'recall': recall_score(y_test, preds, zero_division=0),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 31
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 30,
                                  "text": "            'attack_precision': precision_score(y_test, preds, pos_label=1, zero_division=0),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 30
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 29,
                                  "text": "            'attack_recall': recall_score(y_test, preds, pos_label=1, zero_division=0),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 29
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 28,
                                  "text": "            'attack_f1': f1_score(y_test, preds, pos_label=1, zero_division=0),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 28
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 27,
                                  "text": "        })\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 27
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 26,
                                  "text": "    def agg(key):\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 26
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 25,
                                  "text": "        arr = np.array([r[key] for r in run_stats])\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 25
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 24,
                                  "text": "        return {'mean': float(arr.mean()), 'std': float(arr.std())}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 24
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 23,
                                  "text": "    overall = {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 23
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 22,
                                  "text": "        'f1_score': agg('f1'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 22
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 21,
                                  "text": "        'accuracy': agg('accuracy'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 21
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 20,
                                  "text": "        'precision': agg('precision'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 20
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 19,
                                  "text": "        'recall': agg('recall')\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 19
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 18,
                                  "text": "    }\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 18
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 17,
                                  "text": "    attack_metrics = {'Attack': {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 17
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 16,
                                  "text": "        'f1': agg('attack_f1'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 16
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 15,
                                  "text": "        'precision': agg('attack_precision'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 15
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 14,
                                  "text": "        'recall': agg('attack_recall'),\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 14
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 13,
                                  "text": "        'support': int((y_test==1).sum())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 13
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 12,
                                  "text": "    }, 'Normal': {\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 12
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 11,
                                  "text": "        'f1': {'mean': float(np.nan), 'std': float(np.nan)},\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 11
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 10,
                                  "text": "        'precision': {'mean': float(np.nan), 'std': float(np.nan)},\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 10
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 9,
                                  "text": "        'recall': {'mean': float(np.nan), 'std': float(np.nan)},\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 9
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 8,
                                  "text": "        'support': int((y_test==0).sum())\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 8
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 7,
                                  "text": "    }}\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 7
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 6,
                                  "text": "    return overall, attack_metrics, run_stats\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 6
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 5,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 5
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 4,
                                  "text": "if __name__ == '__main__':\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 4
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 3,
                                  "text": "    main()\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 3
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 2,
                                  "text": "\n",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 2
                              },
                              "references": []
                            },
                            {
                              "type": 1,
                              "ctor": 2,
                              "ctorName": "Nee",
                              "children": [
                                {
                                  "type": 2,
                                  "priority": 150,
                                  "text": "```",
                                  "references": [],
                                  "lineBreakBefore": true
                                }
                              ],
                              "props": {
                                "priority": 150
                              },
                              "references": []
                            }
                          ],
                          "props": {},
                          "references": []
                        }
                      ],
                      "props": {},
                      "references": []
                    }
                  }
                }
              ]
            }
          },
          "modelMessageId": "1f695efe-9099-4cc6-af90-ba9aef00b1a0",
          "responseId": "7fbc2587-e883-4c5b-85b4-a560cd46bfc8",
          "sessionId": "dc095534-b8b3-4941-9d0c-ea01dc84e716",
          "agentId": "github.copilot.editsAgent"
        },
        "details": "GPT-5 (Preview) • 1x"
      },
      "followups": [],
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode",
        "when": "config.chat.agent.enabled",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "panel"
        ],
        "modes": [
          "agent"
        ],
        "slashCommands": [
          {
            "name": "list"
          }
        ],
        "disambiguation": []
      },
      "contentReferences": [
        {
          "kind": "reference",
          "reference": {
            "$mid": 1,
            "fsPath": "/home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "external": "file:///home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "path": "/home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "scheme": "file"
          }
        }
      ],
      "codeCitations": [],
      "timestamp": 1754746466780,
      "modelId": "copilot/gpt-5"
    },
    {
      "requestId": "request_43be3c53-ca10-4507-9492-3eb6820487ce",
      "message": {
        "parts": [
          {
            "range": {
              "start": 0,
              "endExclusive": 63
            },
            "editorRange": {
              "startLineNumber": 1,
              "startColumn": 1,
              "endLineNumber": 1,
              "endColumn": 64
            },
            "text": "Check the terminal, check for codacy and then redo the fast run",
            "kind": "text"
          }
        ],
        "text": "Check the terminal, check for codacy and then redo the fast run"
      },
      "variableData": {
        "variables": [
          {
            "id": "vscode.prompt.instructions.root__file:///home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "name": "prompt:copilot-instructions.md",
            "value": {
              "$mid": 1,
              "external": "file:///home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
              "path": "/home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
              "scheme": "file"
            },
            "kind": "promptFile",
            "modelDescription": "Prompt instructions file",
            "isRoot": true,
            "originLabel": "Automatically attached as setting github.copilot.chat.codeGeneration.useInstructionFiles is enabled",
            "automaticallyAdded": true
          }
        ]
      },
      "response": [
        {
          "kind": "progressTaskSerialized",
          "content": {
            "value": "Optimizing tool selection...",
            "uris": {}
          },
          "progress": []
        },
        {
          "value": "Collecting current terminal outputs to ensure no conflicting processes before launching a new fast diagnostic run. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "get_terminal_output"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": "Checking background terminal output",
          "pastTenseMessage": "Checked background terminal output",
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "ad1bbe70-1582-45f5-8c26-c3dc73b7fb81",
          "toolId": "get_terminal_output"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": "Checking background terminal output",
          "pastTenseMessage": "Checked background terminal output",
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "b261fa9b-4442-46b8-9c2a-ed2851ec2fa1",
          "toolId": "get_terminal_output"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": "Checking background terminal output",
          "pastTenseMessage": "Checked background terminal output",
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "de7f56f1-9aee-4428-a097-c815d01fa0b0",
          "toolId": "get_terminal_output"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": "Checking background terminal output",
          "pastTenseMessage": "Checked background terminal output",
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "695e9524-46f8-422e-99c1-faed827ffb52",
          "toolId": "get_terminal_output"
        },
        {
          "value": "Running fast diagnostic orchestrator experiment with reduced angles and iterations. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "run_in_terminal"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": "Using \"Run in Terminal\"",
          "isConfirmed": true,
          "isComplete": true,
          "toolSpecificData": {
            "kind": "terminal",
            "commandLine": {
              "original": "python scripts/experiment_orchestrator.py --sw-angles 32 --lr-penalty l2 --lr-max-iter 2000 --svm-max-iter 4000 --baseline-pr 0.706 --no-calibration --skip-ablations"
            },
            "language": "sh"
          },
          "toolCallId": "1427de07-826f-4f07-b46e-2b1b85c32322",
          "toolId": "run_in_terminal"
        },
        {
          "value": "Listing latest experiment run directory and inspecting logs to diagnose why orchestrated fast run failed before producing outputs. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_listDirectory"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments",
                "scheme": "file"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments",
                "scheme": "file"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "47778b65-1873-4258-b80e-5fd20aa26c4e",
          "toolId": "copilot_listDirectory"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302",
                "scheme": "file"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302",
                "scheme": "file"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "be05cf32-51c3-4812-bb35-7edbba6f19e5",
          "toolId": "copilot_listDirectory"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output",
                "scheme": "file"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output",
                "scheme": "file"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "bb6d9148-cec1-46d2-827a-7e2e3febda21",
          "toolId": "copilot_listDirectory"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stdout.log)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stdout.log": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stdout.log",
                "scheme": "file"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stdout.log)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stdout.log": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stdout.log",
                "scheme": "file"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "315758fc-6cdf-4347-b52f-b0c87b1bede6",
          "toolId": "copilot_readFile"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Reading [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stderr.log)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stderr.log": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stderr.log",
                "scheme": "file"
              }
            }
          },
          "pastTenseMessage": {
            "value": "Read [](file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stderr.log)",
            "supportThemeIcons": false,
            "supportHtml": false,
            "uris": {
              "file:///home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stderr.log": {
                "$mid": 1,
                "path": "/home/stephen-dorman/dev/TDA_projects/validation/vector_stack_experiments/20250809_134302/raw_output/orchestrator_stderr.log",
                "scheme": "file"
              }
            }
          },
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "846f8865-043a-4cfc-88f5-ebf943498f8c",
          "toolId": "copilot_readFile"
        },
        {
          "value": "Updating orchestrator to export PYTHONPATH so extract script can import src package, then rerunning fast experiment. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "copilot_applyPatch"
        },
        {
          "kind": "toolInvocationSerialized",
          "presentation": "hidden",
          "invocationMessage": "Using \"Apply Patch\"",
          "isConfirmed": true,
          "isComplete": true,
          "toolCallId": "2816b170-2cf6-427f-a577-3a2667752a33",
          "toolId": "copilot_applyPatch"
        },
        {
          "value": "\n```\n",
          "supportThemeIcons": false,
          "supportHtml": false,
          "uris": {}
        },
        {
          "id": "b885bf9d-d39a-4120-95c0-bbb7e207a368",
          "kind": "undoStop"
        },
        {
          "kind": "codeblockUri",
          "uri": {
            "$mid": 1,
            "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "scheme": "file"
          },
          "isEdit": true
        },
        {
          "kind": "textEditGroup",
          "uri": {
            "$mid": 1,
            "fsPath": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "external": "file:///home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "path": "/home/stephen-dorman/dev/TDA_projects/scripts/experiment_orchestrator.py",
            "scheme": "file"
          },
          "edits": [
            [
              {
                "text": "#!/usr/bin/env python3\n\"\"\"Unified experiment orchestration for deterministic vector stack TDA experiments.\n\nImplements automation items 1–20 (initial functional version):\n 1. Experiment orchestrator (this script)\n 2. Config snapshot & hashing\n 3. Topology integrity validator (lightweight)\n 4. Baseline gate (PR-AUC comparison)\n 5. Failure classifier & logging\n 6. Ablation scheduling passthrough (uses underlying extract script)\n 7. Sparse feature pruner (optional secondary pass with L1 LR)\n 8. Threshold optimization (constraint recall >= target)\n 9. Multi-run aggregator (delegates to extract script already; additional summarization)\n10. Artifact completeness checker\n11. Repro script generator\n12. GPU capability probe\n13. Metric trend dashboard (HTML stub generation)\n14. Automatic Codacy scan hook (touch marker file to signal external process; real scan triggered by agent rules)\n15. Change impact diff (against last successful vector stack run)\n16. Experiment registry index\n17. Data drift monitor (timestamps + label balance only — no statistical proxies)\n18. Time/resource logging (wall & peak RSS)\n19. Auto cleanup policy (prune old non-top runs)\n20. Silhouette block toggle scaffold (placeholder flag audit)\n\nNOTE: Heavy computations (full feature extraction) delegated to validation/extract_vector_stack.py\n\nThis script is intentionally lightweight and compliant with UNIFIED_AGENT_INSTRUCTIONS.\n\"\"\"\nfrom __future__ import annotations\nimport argparse\nimport hashlib\nimport json\nimport os\nimport shutil\nimport subprocess\nimport sys\nimport textwrap\nimport time\nfrom datetime import datetime\nfrom pathlib import Path\nfrom typing import Dict, Any, List, Optional\nimport glob\n\nROOT = Path(__file__).resolve().parents[1]\nVALIDATION_DIR = ROOT / 'validation'\nEXTRACT_SCRIPT = VALIDATION_DIR / 'extract_vector_stack.py'\nREGISTRY_PATH = VALIDATION_DIR / 'experiment_registry.json'\nVECTOR_STACK_PATH = ROOT / 'src' / 'embeddings' / 'vector_stack' / 'vector_stack.py'\nRUN_BASE = VALIDATION_DIR / 'vector_stack_experiments'\nDASHBOARD_HTML = VALIDATION_DIR / 'vector_stack_dashboard.html'\n\nREQUIRED_ARTIFACTS = [\n    'results/metrics.json',\n    'results/metrics_with_flags.json',\n    'results/mandatory_metrics.json',\n    'plots/precision_recall_curve.png',\n    'plots/roc_curve.png',\n    'plots/reliability_curve.png',\n    'plots/confusion_matrix.png',\n    'raw_output/classification_report.txt',\n]\n\nFAILURE_LOG = VALIDATION_DIR / 'FAILURE_LOG.md'\n\n# ----------------------------- Helpers ----------------------------- #\n\ndef sha256_file(path: Path) -> str:\n    h = hashlib.sha256()\n    with open(path, 'rb') as f:\n        for chunk in iter(lambda: f.read(8192), b''):\n            h.update(chunk)\n    return h.hexdigest()\n\ndef load_json(path: Path, default=None):\n    if path.exists():\n        with open(path, 'r') as f:\n            return json.load(f)\n    return default\n\ndef save_json(path: Path, obj: Any):\n    path.parent.mkdir(parents=True, exist_ok=True)\n    with open(path, 'w') as f:\n        json.dump(obj, f, indent=2)\n\n# ----------------------------- Topology Integrity Validator ----------------------------- #\n\ndef validate_topology_integrity(config: Dict[str, Any]):\n    # Ensure only allowed blocks & no forbidden statistical proxy flags\n    forbidden_keys = [k for k in config.keys() if 'mean' in k.lower() or 'std' in k.lower()]\n    if forbidden_keys:\n        raise ValueError(f\"Forbidden statistical-like keys present: {forbidden_keys}\")\n    # Mandatory block ordering presence is implied via extract script; basic sanity\n    for flag in ['enable_landscapes','enable_images','enable_betti','enable_sw','enable_kernels']:\n        if flag not in config:\n            # Non-fatal; we will mark but not block; script will supply defaults\n            config.setdefault(flag, True)\n    return True\n\n# ----------------------------- Registry Handling ----------------------------- #\n\ndef load_registry() -> Dict[str, Any]:\n    return load_json(REGISTRY_PATH, default={}) or {}\n\ndef update_registry(registry: Dict[str, Any]):\n    save_json(REGISTRY_PATH, registry)\n\n# ----------------------------- Baseline & Failure Classification ----------------------------- #\n\ndef classify_run(pr_auc: float, baseline: float) -> str:\n    diff = pr_auc - baseline\n    if diff >= 0:  # improvement or match\n        return 'SUCCESS'\n    rel_drop = abs(diff) / baseline if baseline > 0 else 1.0\n    if rel_drop > 0.10:\n        return 'FAILURE'\n    if rel_drop > 0.05:\n        return 'WARNING'\n    return 'REGRESSION'\n\n# ----------------------------- Artifact Completeness ----------------------------- #\n\ndef check_artifacts(run_dir: Path) -> List[str]:\n    missing = []\n    for rel in REQUIRED_ARTIFACTS:\n        if not (run_dir / rel).exists():\n            missing.append(rel)\n    return missing\n\n# ----------------------------- GPU Probe ----------------------------- #\n\ndef gpu_probe() -> Dict[str, Any]:\n    info = {'available': False}\n    try:\n        import torch  # type: ignore\n        info['available'] = torch.cuda.is_available()\n        if info['available']:\n            idx = torch.cuda.current_device()\n            info['device_name'] = torch.cuda.get_device_name(idx)\n            info['total_mem_gb'] = round(torch.cuda.get_device_properties(idx).total_memory / (1024**3), 2)\n    except Exception:\n        info['available'] = False\n    return info\n\n# ----------------------------- Threshold Optimization ----------------------------- #\n\ndef optimize_threshold(metrics_json: Dict[str, Any], recall_target: float = 0.85):\n    # We rely on best_threshold already saved; placeholder for constraint variant\n    # If best threshold recall < target, we keep best; real implementation would search stored prob arrays\n    return {'selected_threshold': metrics_json.get('logistic_regression', {}).get('best_threshold'), 'recall_target': recall_target}\n\n# ----------------------------- Trend Dashboard ----------------------------- #\n\ndef build_dashboard(registry: Dict[str, Any]):\n    rows = []\n    for run_id, meta in sorted(registry.items(), key=lambda x: x[1].get('timestamp','')):\n        pr = meta.get('pr_auc')\n        status = meta.get('status')\n        rows.append(f\"<tr><td>{run_id}</td><td>{meta.get('timestamp')}</td><td>{pr}</td><td>{status}</td><td>{meta.get('baseline')}</td></tr>\")\n    html = f\"\"\"<html><head><title>Vector Stack Experiment Dashboard</title></head>\n    <body><h1>Vector Stack Experiments</h1>\n    <table border='1' cellpadding='4'>\n    <tr><th>Run ID</th><th>Timestamp</th><th>PR-AUC</th><th>Status</th><th>Baseline</th></tr>\n    {''.join(rows)}\n    </table></body></html>\"\"\"\n    DASHBOARD_HTML.write_text(html)\n\n# ----------------------------- Change Impact Diff ----------------------------- #\n\ndef compute_diff(previous_path: Optional[Path], current_hash: str) -> str:\n    # For simplicity store last vector_stack.py hash; real diff already in VCS.\n    if previous_path and previous_path.exists():\n        prev = previous_path.read_text().splitlines()\n    else:\n        prev = []\n    curr = VECTOR_STACK_PATH.read_text().splitlines()\n    # Simple line-by-line diff summary (counts)\n    added = sum(1 for l in curr if l not in prev)\n    removed = sum(1 for l in prev if l not in curr)\n    return f\"Added lines (naive count): {added}, Removed lines (naive count): {removed}, current_hash={current_hash}\"\n\n# ----------------------------- Sparse Feature Pruner (Placeholder) ----------------------------- #\n\ndef sparse_feature_pruner(run_dir: Path) -> Dict[str, Any]:\n    # Placeholder: would load coefficients if persisted. Return stub.\n    return {'feature_mask_size': None, 'pruned': False}\n\n# ----------------------------- Data Drift Monitor ----------------------------- #\n\ndef data_drift_monitor(run_dir: Path) -> Dict[str, Any]:\n    # Use spans.json (if present) + y_train distribution\n    spans_file = run_dir / 'data' / 'spans.json'\n    y_train_file = run_dir / 'data' / 'X_train.npz'\n    drift: Dict[str, Any] = {}\n    if spans_file.exists():\n        drift['spans_present'] = True\n    if y_train_file.exists():\n        try:\n            import numpy as np  # local import\n            dat = np.load(y_train_file)\n            y = dat['y']\n            drift['attack_rate'] = float(y.mean())\n            drift['n_train'] = int(y.shape[0])\n        except Exception as e:\n            drift['error'] = str(e)\n    return drift\n\n# ----------------------------- Auto Cleanup ----------------------------- #\n\ndef auto_cleanup(keep_success: int = 5):\n    if not RUN_BASE.exists():\n        return\n    runs = sorted([p for p in RUN_BASE.iterdir() if p.is_dir()], key=lambda p: p.name)\n    # Keep newest keep_success successes + all failures\n    successes = []\n    for r in runs:\n        meta_f = r / 'results' / 'metrics.json'\n        if meta_f.exists():\n            successes.append(r)\n    if len(successes) <= keep_success:\n        return\n    # Remove oldest extras (simple heuristic)\n    for r in successes[:-keep_success]:\n        try:\n            shutil.rmtree(r)\n        except Exception:\n            pass\n\n# ----------------------------- Main Orchestration ----------------------------- #\n\ndef run_experiment(args):\n    RUN_BASE.mkdir(parents=True, exist_ok=True)\n    ts = datetime.utcnow().strftime('%Y%m%d_%H%M%S')\n    run_dir = RUN_BASE / ts\n    run_dir.mkdir()\n\n    # Config assembly\n    config: Dict[str, Any] = {\n        'sw_num_angles': args.sw_angles,\n        'lr_penalty': args.lr_penalty,\n        'lr_max_iter': args.lr_max_iter,\n        'svm_max_iter': args.svm_max_iter,\n        'baseline_pr_auc': args.baseline_pr,\n    }\n    validate_topology_integrity(config)\n\n    # Hash snapshot\n    code_hash = sha256_file(VECTOR_STACK_PATH)\n    extract_hash = sha256_file(EXTRACT_SCRIPT)\n    snapshot = {\n        'vector_stack_hash': code_hash,\n        'extract_script_hash': extract_hash,\n        'config': config,\n    }\n    save_json(run_dir / 'snapshot.json', snapshot)\n\n    # Skip if hash & config already in registry\n    registry = load_registry()\n    snapshot_id = hashlib.sha256(json.dumps(snapshot, sort_keys=True).encode()).hexdigest()[:16]\n    if not args.force and snapshot_id in registry:\n        print(f\"[orchestrator] Snapshot {snapshot_id} already executed — skipping. Use --force to re-run.\")\n        return run_dir, registry\n\n    # Execute underlying extract script from ROOT so auto-detect can find manifests\n    existing_dirs = set()\n    vout_base = ROOT / 'validation' / 'vector_stack_outputs'\n    if vout_base.exists():\n        existing_dirs = {p.name for p in vout_base.iterdir() if p.is_dir()}\n    cmd = [sys.executable, str(EXTRACT_SCRIPT), '--sw-angles', str(args.sw_angles), '--lr-penalty', args.lr_penalty,\n        '--lr-max-iter', str(args.lr_max_iter), '--svm-max-iter', str(args.svm_max_iter), '--baseline-pr', str(args.baseline_pr)]\n    if args.skip_ablations:\n        cmd.append('--skip-ablations')\n    if args.no_calibration:\n        cmd.append('--no-calibration')\n    start = time.time()\n    env = os.environ.copy()\n    # Ensure project root importable so validation/extract_vector_stack.py can import 'src'\n    env['PYTHONPATH'] = f\"{ROOT}:{env.get('PYTHONPATH','')}\"\n    proc = subprocess.run(cmd, cwd=ROOT, capture_output=True, text=True, env=env)\n    wall = time.time() - start\n    (run_dir / 'raw_output').mkdir(exist_ok=True, parents=True)\n    (run_dir / 'raw_output' / 'orchestrator_stdout.log').write_text(proc.stdout)\n    (run_dir / 'raw_output' / 'orchestrator_stderr.log').write_text(proc.stderr)\n\n    # Locate new output directory\n    new_dir = None\n    if vout_base.exists():\n        for p in vout_base.iterdir():\n            if p.is_dir() and p.name not in existing_dirs:\n                new_dir = p\n                break\n    if new_dir is None:\n        print('[orchestrator] Could not locate new vector_stack_outputs directory; aborting artifact harvest.')\n    else:\n        # Copy selected subfolders into run_dir for standard layout\n        for sub in ['results', 'plots', 'raw_output', 'data']:\n            src = new_dir / sub\n            if src.exists():\n                dest = run_dir / sub\n                if dest.exists():\n                    shutil.rmtree(dest)\n                shutil.copytree(src, dest)\n\n    metrics_path = run_dir / 'results' / 'metrics.json'\n    if not metrics_path.exists():\n        print('[orchestrator] metrics.json missing — run failed.')\n        return run_dir, registry\n\n    metrics = load_json(metrics_path, {})\n    # Use best model PR-AUC (max across models)\n    pr_vals = [m.get('pr_auc') for m in metrics.values() if isinstance(m, dict) and 'pr_auc' in m]\n    best_pr = max(pr_vals) if pr_vals else None\n\n    status = None\n    if best_pr is not None:\n        status = classify_run(best_pr, args.baseline_pr)\n\n    missing = check_artifacts(run_dir)\n\n    # Failure logging\n    if status in {'FAILURE','WARNING','REGRESSION'}:\n        FAILURE_LOG.parent.mkdir(parents=True, exist_ok=True)\n        with open(FAILURE_LOG, 'a') as f:\n            f.write(textwrap.dedent(f\"\"\"\n            ## {datetime.utcnow().isoformat()}Z\n            Run: {run_dir.name}\n            Status: {status}\n            Best PR-AUC: {best_pr}\n            Baseline: {args.baseline_pr}\n            Missing Artifacts: {missing}\n            Snapshot ID: {snapshot_id}\n            \"\"\"))\n\n    # GPU probe & save\n    gpu_info = gpu_probe()\n    save_json(run_dir / 'results' / 'gpu_probe.json', gpu_info)\n\n    # Threshold optimization placeholder\n    save_json(run_dir / 'results' / 'threshold_optimization.json', optimize_threshold(metrics, recall_target=args.recall_target))\n\n    # Drift monitor\n    save_json(run_dir / 'results' / 'data_drift.json', data_drift_monitor(run_dir))\n\n    # Sparse pruning placeholder\n    save_json(run_dir / 'results' / 'sparse_pruning.json', sparse_feature_pruner(run_dir))\n\n    # Record registry entry\n    registry[snapshot_id] = {\n        'run_dir': run_dir.name,\n        'timestamp': ts,\n        'pr_auc': best_pr,\n        'status': status,\n        'baseline': args.baseline_pr,\n        'wall_time_sec': wall,\n        'missing_artifacts': missing,\n    }\n    update_registry(registry)\n\n    # Build dashboard\n    build_dashboard(registry)\n\n    # Change impact diff (using stored last hash file if exists)\n    prev_hash_path = RUN_BASE / 'last_vector_stack_hash.txt'\n    diff_summary = compute_diff(prev_hash_path if prev_hash_path.exists() else None, code_hash)\n    (run_dir / 'results' / 'change_diff.txt').write_text(diff_summary)\n    prev_hash_path.write_text(VECTOR_STACK_PATH.read_text())\n\n    # Generate repro script\n    repro = f\"#!/bin/bash\\nset -euo pipefail\\ncd $(dirname $0)\\npython {EXTRACT_SCRIPT.relative_to(ROOT)} --sw-angles {args.sw_angles} --lr-penalty {args.lr_penalty} --lr-max-iter {args.lr_max_iter} --svm-max-iter {args.svm_max_iter} --baseline-pr {args.baseline_pr}\\n\"\n    (run_dir / 'reproduce.sh').write_text(repro)\n    # Default to non-executable (owner/group/world read) for security; user can chmod +x manually if executing directly\n    os.chmod(run_dir / 'reproduce.sh', 0o644)\n    # Auto cleanup\n    auto_cleanup()\n\n    summary = {\n        'run_dir': str(run_dir),\n        'best_pr_auc': best_pr,\n        'status': status,\n        'missing_artifacts': missing,\n        'snapshot_id': snapshot_id,\n        'gpu': gpu_info,\n    }\n    save_json(run_dir / 'results' / 'orchestrator_summary.json', summary)\n    print(json.dumps(summary, indent=2))\n    return run_dir, registry\n\n# ----------------------------- CLI ----------------------------- #\n\ndef parse_args():\n    p = argparse.ArgumentParser()\n    p.add_argument('--sw-angles', type=int, default=48)\n    p.add_argument('--lr-penalty', choices=['l1','l2'], default='l1')\n    p.add_argument('--lr-max-iter', type=int, default=8000)\n    p.add_argument('--svm-max-iter', type=int, default=8000)\n    p.add_argument('--baseline-pr', type=float, default=0.706)\n    p.add_argument('--skip-ablations', action='store_true')\n    p.add_argument('--no-calibration', action='store_true')\n    p.add_argument('--force', action='store_true', help='Force re-run even if snapshot seen')\n    p.add_argument('--recall-target', type=float, default=0.85)\n    return p.parse_args()\n\nif __name__ == '__main__':\n    args = parse_args()\n    run_experiment(args)\n",
                "range": {
                  "startLineNumber": 1,
                  "startColumn": 1,
                  "endLineNumber": 407,
                  "endColumn": 1
                }
              }
            ],
            []
          ],
          "done": true
        },
        {
          "value": "\n```\n",
          "supportThemeIcons": false,
          "supportHtml": false,
          "uris": {}
        },
        {
          "value": "Running Codacy analysis on modified orchestrator file per rules. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "activate_codacy_quality_analysis_tools"
        },
        {
          "value": "Analyzing the updated orchestrator file with Codacy CLI for quality issues. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "mcp_codacy_codacy_cli_analyze"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": {
            "value": "Running `codacy_cli_analyze`",
            "isTrusted": false,
            "supportThemeIcons": false,
            "supportHtml": false
          },
          "pastTenseMessage": {
            "value": "Ran `codacy_cli_analyze` ",
            "isTrusted": false,
            "supportThemeIcons": false,
            "supportHtml": false
          },
          "originMessage": {
            "value": "[codacy \\(MCP Server\\)](command:workbench.mcp.showConfiguration?%255B%2522mcp.config.usrlocal%2522%252C%2522mcp.config.usrlocal.codacy%2522%255D)",
            "isTrusted": true,
            "supportThemeIcons": false,
            "supportHtml": false
          },
          "isConfirmed": true,
          "isComplete": true,
          "resultDetails": {
            "input": "{\n  \"rootPath\": \"/home/stephen-dorman/dev/TDA_projects\",\n  \"file\": \"scripts/experiment_orchestrator.py\"\n}",
            "output": [
              {
                "type": "embed",
                "isText": true,
                "value": "{\n  \"success\": true,\n  \"result\": [\n    {\n      \"tool\": {\n        \"name\": \"Semgrep OSS\",\n        \"rules\": null,\n        \"semanticVersion\": \"1.78.0\"\n      },\n      \"results\": []\n    },\n    {\n      \"tool\": {\n        \"fullName\": \"Trivy Vulnerability Scanner\",\n        \"informationUri\": \"https://github.com/aquasecurity/trivy\",\n        \"name\": \"Trivy\",\n        \"rules\": null,\n        \"version\": \"0.65.0\"\n      },\n      \"results\": []\n    },\n    {\n      \"tool\": {\n        \"informationUri\": \"https://pylint.org\",\n        \"name\": \"Pylint\",\n        \"rules\": null,\n        \"version\": \"3.3.6\"\n      },\n      \"results\": []\n    }\n  ]\n}"
              }
            ],
            "isError": false
          },
          "toolSpecificData": {
            "kind": "input",
            "rawInput": {
              "rootPath": "/home/stephen-dorman/dev/TDA_projects",
              "file": "scripts/experiment_orchestrator.py"
            }
          },
          "toolCallId": "031896bb-5c06-42ee-a456-fea1cb6b1eea",
          "toolId": "mcp_codacy_codacy_cli_analyze"
        },
        {
          "value": "Re-running fast experiment after PYTHONPATH fix. ",
          "supportThemeIcons": false,
          "supportHtml": false,
          "baseUri": {
            "$mid": 1,
            "path": "/home/stephen-dorman/dev/TDA_projects/",
            "scheme": "file"
          }
        },
        {
          "kind": "prepareToolInvocation",
          "toolName": "run_in_terminal"
        },
        {
          "kind": "toolInvocationSerialized",
          "invocationMessage": "Using \"Run in Terminal\"",
          "isConfirmed": true,
          "isComplete": false,
          "toolSpecificData": {
            "kind": "terminal",
            "commandLine": {
              "original": "python scripts/experiment_orchestrator.py --sw-angles 32 --lr-penalty l2 --lr-max-iter 2000 --svm-max-iter 4000 --baseline-pr 0.706 --no-calibration --skip-ablations"
            },
            "language": "sh"
          },
          "toolCallId": "5725a4c8-d64f-4668-a993-76b580f74160",
          "toolId": "run_in_terminal"
        }
      ],
      "responseId": "response_fd1f47d4-8458-4feb-95aa-002f6e4ce9ef",
      "isCanceled": false,
      "agent": {
        "extensionId": {
          "value": "GitHub.copilot-chat",
          "_lower": "github.copilot-chat"
        },
        "publisherDisplayName": "GitHub",
        "extensionPublisherId": "GitHub",
        "extensionDisplayName": "GitHub Copilot Chat",
        "id": "github.copilot.editsAgent",
        "description": "Edit files in your workspace in agent mode",
        "when": "config.chat.agent.enabled",
        "metadata": {
          "themeIcon": {
            "id": "tools"
          },
          "hasFollowups": false,
          "supportIssueReporting": false
        },
        "name": "agent",
        "fullName": "GitHub Copilot",
        "isDefault": true,
        "locations": [
          "panel"
        ],
        "modes": [
          "agent"
        ],
        "slashCommands": [
          {
            "name": "list"
          }
        ],
        "disambiguation": []
      },
      "contentReferences": [
        {
          "kind": "reference",
          "reference": {
            "$mid": 1,
            "fsPath": "/home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "external": "file:///home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "path": "/home/stephen-dorman/dev/TDA_projects/.github/copilot-instructions.md",
            "scheme": "file"
          }
        }
      ],
      "codeCitations": [],
      "timestamp": 1754746925654,
      "modelId": "copilot/gpt-5"
    }
  ]
}