_target_: topobench.model.TBModel

model_name: san
model_domain: simplicial

feature_encoder:
  _target_: topobench.nn.encoders.${model.feature_encoder.encoder_name}
  encoder_name: AllCellFeatureEncoder
  in_channels: ${infer_in_channels:${dataset},${oc.select:transforms,null}} 
  out_channels: 64
  proj_dropout: 0.0
  selected_dimensions:
    - 0
    - 1

backbone:
  _target_: topomodelx.nn.simplicial.san.SAN
  in_channels: ${model.backbone.hidden_channels}
  hidden_channels: ${model.feature_encoder.out_channels}
  n_filters: 2
  n_layers: 1
  order_harmonic: 1
  epsilon_harmonic: 1e-1

backbone_wrapper:
  _target_: topobench.nn.wrappers.SANWrapper
  _partial_: true
  wrapper_name: SANWrapper
  out_channels: ${model.feature_encoder.out_channels}
  num_cell_dimensions: ${infer_num_cell_dimensions:${oc.select:model.feature_encoder.selected_dimensions,null},${model.feature_encoder.in_channels}}

readout:
  _target_: topobench.nn.readouts.${model.readout.readout_name}
  readout_name: PropagateSignalDown #  Use <NoReadOut> in case readout is not needed Options: PropagateSignalDown
  num_cell_dimensions: ${infer_num_cell_dimensions:${oc.select:model.feature_encoder.selected_dimensions,null},${model.feature_encoder.in_channels}} # The highest order of cell dimensions to consider
  hidden_dim: ${model.feature_encoder.out_channels}
  out_channels: ${dataset.parameters.num_classes}
  task_level: ${dataset.parameters.task_level}
  pooling_type: sum
  
# compile model for faster training with pytorch 2.0
compile: false
