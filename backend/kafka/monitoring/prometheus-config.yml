# Prometheus Configuration for TDA Kafka Monitoring
# Comprehensive metrics collection for cluster health, topic performance, and TDA workflows

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'tda-kafka'
    environment: '${ENVIRONMENT:-development}'

rule_files:
  - "alerts.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Kafka Broker JMX Metrics
  - job_name: 'kafka-brokers'
    static_configs:
      - targets:
          - 'kafka-broker-1:7071'
          - 'kafka-broker-2:7071'
          - 'kafka-broker-3:7071'
    scrape_interval: 10s
    metrics_path: /metrics
    
  # Kafka JMX Exporter for detailed broker metrics
  - job_name: 'kafka-jmx'
    static_configs:
      - targets:
          - 'kafka-jmx-exporter:8080'
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: /metrics
    
  # Zookeeper Metrics (if using Zookeeper)
  - job_name: 'zookeeper'
    static_configs:
      - targets:
          - 'zookeeper-1:7000'
          - 'zookeeper-2:7000'
          - 'zookeeper-3:7000'
    scrape_interval: 30s
    
  # Schema Registry Metrics
  - job_name: 'schema-registry'
    static_configs:
      - targets:
          - 'schema-registry:8081'
    scrape_interval: 30s
    metrics_path: /metrics
    
  # Kafka Connect Metrics
  - job_name: 'kafka-connect'
    static_configs:
      - targets:
          - 'kafka-connect:8083'
    scrape_interval: 30s
    metrics_path: /metrics
    
  # TDA Custom Metrics Exporter
  - job_name: 'tda-kafka-metrics'
    static_configs:
      - targets:
          - 'tda-metrics-exporter:8090'
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'tda-metrics-exporter:8090'
        
  # TDA Backend API Metrics
  - job_name: 'tda-backend'
    static_configs:
      - targets:
          - 'tda-backend:8000'
    scrape_interval: 15s
    metrics_path: /metrics
    
  # Kafka Lag Exporter for Consumer Group Monitoring
  - job_name: 'kafka-lag-exporter'
    static_configs:
      - targets:
          - 'kafka-lag-exporter:8000'
    scrape_interval: 30s
    
  # TDA Health Check Service
  - job_name: 'tda-health-check'
    static_configs:
      - targets:
          - 'tda-health-service:8091'
    scrape_interval: 60s
    metrics_path: /health/metrics
    
  # Node Exporter for System Metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets:
          - 'kafka-broker-1:9100'
          - 'kafka-broker-2:9100'
          - 'kafka-broker-3:9100'
    scrape_interval: 30s
    
  # cAdvisor for Container Metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets:
          - 'cadvisor:8080'
    scrape_interval: 30s
    metrics_path: /metrics
    
  # JMX Exporter Configuration for Kafka Brokers
  - job_name: 'kafka-detailed-jmx'
    static_configs:
      - targets:
          - 'kafka-broker-1:9308'
          - 'kafka-broker-2:9308'
          - 'kafka-broker-3:9308'
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        regex: 'kafka-broker-(\d+):9308'
        target_label: broker_id
        replacement: '${1}'
        
# JMX Exporter Rules for Kafka Metrics
# These rules define which JMX metrics to collect from Kafka brokers
jmx_config:
  # Broker-level metrics
  broker_metrics:
    - pattern: 'kafka.server<type=BrokerTopicMetrics, name=(.+), topic=(.+)><>Count'
      name: kafka_broker_topic_$1_total
      labels:
        topic: $2
    - pattern: 'kafka.server<type=BrokerTopicMetrics, name=(.+)><>Count'
      name: kafka_broker_$1_total
    - pattern: 'kafka.server<type=ReplicaManager, name=(.+)><>Value'
      name: kafka_replica_manager_$1
    - pattern: 'kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>OneMinuteRate'
      name: kafka_request_handler_avg_idle_percent
      
  # Network metrics
  network_metrics:
    - pattern: 'kafka.network<type=RequestMetrics, name=RequestsPerSec, request=(.+)><>OneMinuteRate'
      name: kafka_network_requests_per_sec
      labels:
        request_type: $1
    - pattern: 'kafka.network<type=SocketServer, name=NetworkProcessorAvgIdlePercent><>Value'
      name: kafka_network_processor_avg_idle_percent
      
  # Log metrics
  log_metrics:
    - pattern: 'kafka.log<type=LogFlushStats, name=LogFlushRateAndTimeMs><>OneMinuteRate'
      name: kafka_log_flush_rate
    - pattern: 'kafka.log<type=LogSize, name=Size, topic=(.+), partition=(.+)><>Value'
      name: kafka_log_size_bytes
      labels:
        topic: $1
        partition: $2
        
  # Controller metrics
  controller_metrics:
    - pattern: 'kafka.controller<type=KafkaController, name=(.+)><>Value'
      name: kafka_controller_$1
    - pattern: 'kafka.controller<type=ControllerStats, name=(.+)><>OneMinuteRate'
      name: kafka_controller_stats_$1_rate
      
  # Partition metrics
  partition_metrics:
    - pattern: 'kafka.cluster<type=Partition, name=(.+), topic=(.+), partition=(.+)><>Value'
      name: kafka_partition_$1
      labels:
        topic: $2
        partition: $3
        
  # Consumer group metrics
  consumer_metrics:
    - pattern: 'kafka.consumer<type=consumer-fetch-manager-metrics, client-id=(.+), topic=(.+), partition=(.+)><>(.+)'
      name: kafka_consumer_$4
      labels:
        client_id: $1
        topic: $2
        partition: $3
        
  # Producer metrics
  producer_metrics:
    - pattern: 'kafka.producer<type=producer-metrics, client-id=(.+)><>(.+)'
      name: kafka_producer_$2
      labels:
        client_id: $1
    - pattern: 'kafka.producer<type=producer-topic-metrics, client-id=(.+), topic=(.+)><>(.+)'
      name: kafka_producer_topic_$3
      labels:
        client_id: $1
        topic: $2

# Custom TDA-specific metric collection rules
tda_metrics:
  # TDA job processing metrics
  job_processing:
    - pattern: 'tda.jobs<type=JobMetrics, name=(.+), job_type=(.+)><>Count'
      name: tda_jobs_$1_total
      labels:
        job_type: $2
    - pattern: 'tda.processing<type=ProcessingTime, name=(.+), algorithm=(.+)><>Mean'
      name: tda_processing_time_seconds
      labels:
        metric: $1
        algorithm: $2
        
  # TDA result metrics
  result_metrics:
    - pattern: 'tda.results<type=ResultMetrics, name=(.+), result_type=(.+)><>Count'
      name: tda_results_$1_total
      labels:
        result_type: $2
    - pattern: 'tda.persistence<type=DiagramMetrics, name=(.+), dimension=(.+)><>Value'
      name: tda_persistence_diagram_$1
      labels:
        dimension: $2
        
  # TDA system health metrics
  health_metrics:
    - pattern: 'tda.health<type=SystemHealth, name=(.+), component=(.+)><>Value'
      name: tda_system_health_$1
      labels:
        component: $2
    - pattern: 'tda.workflow<type=WorkflowHealth, name=(.+), workflow=(.+)><>Value'
      name: tda_workflow_health_$1
      labels:
        workflow: $2